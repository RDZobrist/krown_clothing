{"version":3,"sources":["redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx","components/collection-preview/collection-preview.styles.jsx","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.styles.jsx","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collections-overview.container.jsx"],"names":["selectShop","state","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded","WithSpinner","WrappedComponent","isLoading","otherProps","CollectionItemContainer","styled","div","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","connect","dispatch","addItem","item","name","price","className","onClick","inverted","CollectionPreviewContainer","TitleContainer","h1","displayName","PreviewContainer","withRouter","title","items","history","match","routeName","push","path","toUpperCase","filter","idx","id","CollectionsOverviewContainer","mapStateToProps","createStructuredSelector","otherCollectionProps","compose","CollectionsOverview"],"mappings":"kHAAA,oJAEMA,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAErBC,EAAoBC,YAC7B,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKG,eAGJC,EAA8BF,YACvC,CAACD,IACD,SAAAE,GAAW,OACTA,EAAcE,OAAOC,KAAKH,GAAaI,KAAI,SAAAC,GAAG,OAAIL,EAAYK,MAAQ,MAG7DC,EAAmB,SAAAC,GAAkB,OACpDR,YACI,CAACD,IACD,SAAAE,GAAW,OAAKA,EAAcA,EAAYO,GAAsB,SAGvDC,EAA6BT,YACtC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKY,cAEJC,EAA4BX,YACrC,CAACJ,IACD,SAAAE,GAAI,QAAMA,EAAKG,gB,4FCnBJW,IAJK,SAAAC,GAAgB,OAAI,YAAmC,IAAhCC,EAA+B,EAA/BA,UAAcC,EAAiB,iBACxE,OAAOD,EAAY,cAAC,IAAD,IAAc,cAACD,EAAD,eAAsBE,O,8FCF5CC,EAA0BC,IAAOC,IAAV,gSAmBvBC,EAAYF,YAAOG,IAAPH,CAAH,2IASTI,EAAkBJ,IAAOC,IAAV,+LAON,gBAAGI,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4BN,IAAOC,IAAV,oIAQzBM,EAAgBP,IAAOQ,KAAV,wFAMbC,EAAiBT,IAAOQ,KAAV,iE,QCpBZE,gBACb,MALyB,SAAAC,GAAQ,MAAK,CACtCC,QAAS,SAAAC,GAAI,OAAIF,EAASC,YAAQC,QAGrBH,EArBe,SAAC,GAAuB,IAArBG,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QAC7BE,EAA0BD,EAA1BC,KAAMC,EAAoBF,EAApBE,MAAOV,EAAaQ,EAAbR,SAErB,OACE,eAACN,EAAD,WACE,cAACK,EAAD,CAAiBY,UAAU,QAAQX,SAAUA,IAC7C,eAACC,EAAD,WACE,cAACC,EAAD,UAAgBO,IAChB,cAACL,EAAD,UAAiBM,OAEnB,cAACb,EAAD,CAAWe,QAAS,kBAAML,EAAQC,IAAOK,UAAQ,EAAjD,gC,oJCtBOC,EAA6BnB,IAAOC,IAAV,qMAW1BmB,EAAiBpB,IAAOqB,GAAV,oJAU3BD,EAAeE,YAAc,iBAEtB,I,EAAMC,EAAmBvB,IAAOC,IAAV,kN,QCOduB,eArBkB,SAAC,GAAD,IAC/BC,EAD+B,EAC/BA,MACAC,EAF+B,EAE/BA,MACAC,EAH+B,EAG/BA,QACAC,EAJ+B,EAI/BA,MACAC,EAL+B,EAK/BA,UAL+B,OAO/B,eAACV,EAAD,WACE,cAACC,EAAD,CAAgBH,QAAS,kBAAMU,EAAQG,KAAR,UAAgBF,EAAMG,KAAtB,YAA8BF,KAA7D,SACGJ,EAAMO,gBAET,cAACT,EAAD,UACGG,EACEO,QAAO,SAACpB,EAAMqB,GAAP,OAAeA,EAAM,KAC5B9C,KAAI,SAAAyB,GAAI,OACP,cAAC,IAAD,CAA8BA,KAAMA,GAAfA,EAAKsB,eCvBvBC,EAA+BpC,IAAOC,IAAV,yE,SCcnCoC,EAAkBC,YAAyB,CAC/CtD,YAAaC,MAGAyB,cAAQ2B,EAAR3B,EAZa,SAAC,GAAD,IAAG1B,EAAH,EAAGA,YAAH,OAC1B,cAACoD,EAAD,UACGpD,EAAYI,KAAI,gBAAG+C,EAAH,EAAGA,GAAOI,EAAV,wBACf,cAAC,EAAD,eAAgCA,GAARJ,WCFxBE,EAAkBC,YAAyB,CAC7CzC,UAAWL,MAGT4C,EAA+BI,YACjC9B,YAAQ2B,GACR1C,IAFiC6C,CAG/BC,GAESL","file":"static/js/4.10b1053f.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n    [selectShop],\n    shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n    [selectCollections],\n    collections =>\n      collections ? Object.keys(collections).map(key => collections[key]) : []\n  );\n\n  export const selectCollection = collectionUrlParam => \ncreateSelector(\n    [selectCollections],\n    collections => (collections ? collections[collectionUrlParam] : null)\n);\n\nexport const selectIsCollectionFetching = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n)\nexport const selectIsCollectionsLoaded = createSelector(\n    [selectShop],\n    shop => !!shop.collections\n)","import React from 'react';\n\nimport Spinner from '../spinner/spinner.component';\n\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\n};\n\nexport default WithSpinner;","import styled from 'styled-components';\nimport CustomButton from '../custom-button/custom-button.component';\n\nexport const CollectionItemContainer = styled.div`\n  width: 19vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n  &:hover {\n    .image {\n      opacity: 0.92;\n      \n    }\n    button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 78%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  border-radius: 3px;\n  display: none;\n`;\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  border-radius: 3px;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const NameContainer = styled.span`\n  width: 75%;\n  margin-bottom: 15px;\n  font-weight: 300;\n`;\n\nexport const PriceContainer = styled.span`\n  width: 10%;\n  text-align: right;\n`;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { addItem } from '../../redux/cart/cart.actions';\n\nimport {\n  CollectionItemContainer,\n  CollectionFooterContainer,\n  AddButton,\n  BackgroundImage,\n  NameContainer,\n  PriceContainer\n} from './collection-item.styles';\n\nexport const CollectionItem = ({ item, addItem }) => {\n  const { name, price, imageUrl } = item;\n\n  return (\n    <CollectionItemContainer>\n      <BackgroundImage className='image' imageUrl={imageUrl} />\n      <CollectionFooterContainer>\n        <NameContainer>{name}</NameContainer>\n        <PriceContainer>{price}</PriceContainer>\n      </CollectionFooterContainer>\n      <AddButton onClick={() => addItem(item)} inverted>\n        Add to cart\n      </AddButton>\n    </CollectionItemContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CollectionItem);","import styled from 'styled-components';\n\nexport const CollectionPreviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n  border-radius: 3px;\n  @media screen and (max-width: 800px) {\n    align-items: center;\n  }\n  \n`;\n\nexport const TitleContainer = styled.h1`\n  font-size: 24px;\n  font-weight:600;\n  margin-bottom: 25px;\n  cursor: pointer;\n  &:hover {\n    color: grey;\n  }\n`;\n\nTitleContainer.displayName = 'TitleContainer';\n\nexport const PreviewContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  \n  @media screen and (max-width: 800px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 15px;\n  }\n`;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport CollectionItem from '../collection-item/collection-item.component';\n\nimport {\n  CollectionPreviewContainer,\n  TitleContainer,\n  PreviewContainer\n} from './collection-preview.styles';\n\nexport const CollectionPreview = ({\n  title,\n  items,\n  history,\n  match,\n  routeName\n}) => (\n  <CollectionPreviewContainer>\n    <TitleContainer onClick={() => history.push(`${match.path}/${routeName}`)}>\n      {title.toUpperCase()}\n    </TitleContainer>\n    <PreviewContainer>\n      {items\n        .filter((item, idx) => idx < 4)\n        .map(item => (\n          <CollectionItem key={item.id} item={item} />\n        ))}\n    </PreviewContainer>\n  </CollectionPreviewContainer>\n);\n\nexport default withRouter(CollectionPreview);","\nimport styled from 'styled-components';\n\nexport const CollectionsOverviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport CollectionPreview from '../collection-preview/collection-preview.component';\n\nimport { selectCollectionsForPreview } from '../../redux/shop/shop.selectors';\nimport { CollectionsOverviewContainer } from './collections-overview.styles';\n\nconst CollectionsOverview = ({ collections }) => (\n  <CollectionsOverviewContainer>\n    {collections.map(({ id, ...otherCollectionProps }) => (\n      <CollectionPreview key={id} {...otherCollectionProps} />\n    ))}\n  </CollectionsOverviewContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectCollectionsForPreview\n});\n\nexport default connect(mapStateToProps)(CollectionsOverview);","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { compose } from 'redux';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../with-spinner/with-spinner.component';\nimport CollectionsOverview from '../collections-overview/collections-overview.component';\n\n\n\n\nconst mapStateToProps = createStructuredSelector({\n    isLoading: selectIsCollectionFetching\n})\n\nconst CollectionsOverviewContainer = compose(\n    connect(mapStateToProps),\n    WithSpinner\n    )(CollectionsOverview);\n\nexport default CollectionsOverviewContainer;"],"sourceRoot":""}