{"version":3,"sources":["components/form-input/form-input.styles.jsx","components/form-input/form-input.component.jsx","components/sign-in/sign-in.styles.jsx","components/sign-up/sign-up.styles.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx"],"names":["subColor","shrinkLabelStyles","css","GroupContainer","styled","div","FormInputContainer","input","FormInputLabel","label","FormInput","handleChange","props","onChange","className","value","length","SigninContainer","SigninandSignupButtonContainer","SignupContainer","SignupTitle","h2","connect","dispatch","googleSigninStart","emailSigninStart","email","password","useState","userCredentials","setCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","autoComplete","type","required","onClick","isGoogleSignIn","signupStart","displayName","confirmPassword","setUserCredentials","alert","autocomplete","SignInandSignUpContainer","getPerformance","SignInAndSignUpPage"],"mappings":"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","file":"static/js/8.be2712bc.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\n\nconst subColor = 'grey';\nconst mainColor = 'black';\n\nconst shrinkLabelStyles = css`\n  top: -14px;\n  font-size: 12px;\n  color: ${mainColor};\n`;\n\nexport const GroupContainer = styled.div`\n  position: relative;\n  margin: 45px 0;\n  input[type='password'] {\n    letter-spacing: 0.3em;\n  }\n`;\n\nexport const FormInputContainer = styled.input`\n  background: none;\n  background-color: white;\n  color: ${subColor};\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 100%;\n  border: none;\n  border-radius: 0;\n  border-bottom: 1px solid ${subColor};\n  margin: 25px 0;\n  &:focus {\n    outline: none;\n  }\n  &:focus ~ label {\n    ${shrinkLabelStyles}\n  }\n`;\n\nexport const FormInputLabel = styled.label`\n  color: ${subColor};\n  font-size: 16px;\n  font-weight: normal;\n  position: absolute;\n  pointer-events: none;\n  left: 5px;\n  top: 10px;\n  transition: 300ms ease all;\n  &.shrink {\n    ${shrinkLabelStyles}\n  }\n`;","import React from 'react';\n\nimport {\n  GroupContainer,\n  FormInputContainer,\n  FormInputLabel\n} from './form-input.styles';\n\nconst FormInput = ({ handleChange, label, ...props }) => (\n  <GroupContainer>\n    <FormInputContainer onChange={handleChange} {...props} />\n    {label ? (\n      <FormInputLabel className={props.value.length ? 'shrink' : ''}>\n        {label}\n      </FormInputLabel>\n    ) : null}\n  </GroupContainer>\n);\n\nexport default FormInput;","import styled from 'styled-components';\n\nexport const SigninContainer = styled.div`\n    width: 380px;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const SigninandSignupButtonContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    border-radius: 3px;\n    `;\n\n","import styled from 'styled-components';\n\nexport const SignupContainer = styled.div` \n    display: flex;\n    flex-direction: column;\n    width: 380px;\n`;\n\nexport const SignupTitle = styled.h2`\n    margin: 10px auto;\n`;","import React, {useState} from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { emailSigninStart, googleSigninStart } from '../../redux/user/user.actions';\nimport { SigninContainer, SigninandSignupButtonContainer } from './sign-in.styles';\n\nimport { SignupTitle } from '../sign-up/sign-up.styles'\n\nconst SignIn = ({ emailSigninStart, googleSigninStart }) => {\n  const [userCredentials, setCredentials] = useState({ email: '', password: ''});\n  const { email, password } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    emailSigninStart(email, password);\n\n\n  };\n\n  const handleChange = event => {\n    const { value, name } = event.target;\n\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n\n    return (\n      <SigninContainer>      \n        <SignupTitle>I already have an account</SignupTitle>\n        <span>Sign in with your email and password</span>\n\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <input type='hidden' value='prayer' />\n          <FormInput\n            name='email'\n            type='email'\n            handleChange={handleChange}\n            value={userCredentials.email}\n            label='email'\n            autoComplete=\"off\"\n            required\n          />\n          <FormInput\n            name='password'\n            type='password'\n            value={userCredentials.password}\n            handleChange={handleChange}\n            label='password'\n            autoComplete=\"off\"\n            required\n          />\n          <SigninandSignupButtonContainer>\n          <CustomButton type='submit'> Sign in </CustomButton>\n            <CustomButton\n              type='button'\n              onClick={googleSigninStart}\n              isGoogleSignIn\n            >\n              Google\n            </CustomButton>\n            {/* <CustomButton onClick={signInWithFacebook} isFacebookSignIn>\n              Facebook\n            </CustomButton> */}\n          </SigninandSignupButtonContainer>        </form>\n      </SigninContainer>\n    );\n  \n}\nconst mapDispatchToProps = dispatch => ({\n  googleSigninStart: () => dispatch(googleSigninStart()),\n  emailSigninStart: (email, password) =>\n    dispatch(emailSigninStart({ email, password }))\n});\nexport default connect(null, mapDispatchToProps)(SignIn);\n","import React, {useState} from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signupStart } from '../../redux/user/user.actions';\nimport { SignupTitle, SignupContainer } from './sign-up.styles';\n\nconst SignUp = ({signupStart}) => {\n  const [userCredentials, setUserCredentials ] = useState({displayName:'',email:'',password:'',confirmPassword:''})\n\n  \n  const { displayName, email, password, confirmPassword } = userCredentials;\n\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n      signupStart({displayName, email, password});\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setUserCredentials({ ...userCredentials, [name]: value });\n  };\n\n \n    return (\n      <SignupContainer>       \n         <SignupTitle>I do not have a account</SignupTitle>\n        <span>Sign up with your email and password</span>\n        <form className='sign-up-form' onSubmit={handleSubmit}>\n          <FormInput\n            type='text'\n            name='displayName'\n            value={displayName}\n            onChange={handleChange}\n            label='Display Name'\n            autocomplete=\"off\"\n            required\n          />\n          <FormInput\n            type='email'\n            name='email'\n            value={email}\n            onChange={handleChange}\n            label='Email'\n            autocomplete=\"off\"\n            required\n          />\n          <FormInput\n            type='password'\n            name='password'\n            value={password}\n            onChange={handleChange}\n            autocomplete=\"off\"\n            label='Password'\n            required\n          />\n          <FormInput\n            type='password'\n            name='confirmPassword'\n            value={confirmPassword}\n            onChange={handleChange}\n            label='Confirm Password'\n            autocomplete=\"off\"\n            required\n          />\n          <CustomButton type='submit'>SIGN UP</CustomButton>\n        </form>\n      </SignupContainer>);\n  \n}\nconst mapDispatchToProps = dispatch => ({\n  signupStart: userCredentials => dispatch(signupStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n","import styled from 'styled-components';\n\nexport const SignInandSignUpContainer = styled.div`\n    width: 850px;\n    display: flex;\n    justify-content: space-between;\n    margin: 30px auto;\n`;","import React from 'react';\nimport { getPerformance } from \"firebase/performance\";\n\nimport SignIn from '../../components/sign-in/sign-in.component';\nimport SignUp from '../../components/sign-up/sign-up.component';\n\nimport { SignInandSignUpContainer } from './sign-in-and-sign-up.styles';\nconst SignInAndSignUpPage = () => (\n  <SignInandSignUpContainer>\n    <SignIn />\n    <SignUp />\n  </SignInandSignUpContainer>\n);\ngetPerformance();\nexport default SignInAndSignUpPage;\n"],"sourceRoot":""}