{"ast":null,"code":"import React,{Fragment}from\"react\";import{connect}from\"react-redux\";import{createStructuredSelector}from\"reselect\";import CheckoutItem from\"../../components/checkout-item/checkout-item.component\";import StripeCheckoutButton from\"../../components/checkout-button/stripe-button.component\";import{selectCartItems,selectCartTotal}from\"../../redux/cart/cart.selectors\";import{selectCurrentUser}from\"../../redux/user/user.selectors\";import{CheckoutPageContainer,CheckoutHeaderContainer,SubtotalSpan,CheckoutHeaderBlock,TotalContainer,TestWarningccinfoContainer}from\"./checkout.styles\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var CheckoutPage=function CheckoutPage(_ref){var currentUser=_ref.currentUser,cartItems=_ref.cartItems,total=_ref.total,_ref$tax=_ref.tax,tax=_ref$tax===void 0?total*.08:_ref$tax;return/*#__PURE__*/_jsxs(CheckoutPageContainer,{children:[currentUser!==null?/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsxs(\"h3\",{children:[currentUser.displayName,\"'s cart\"]}),/*#__PURE__*/_jsx(\"br\",{})]}):null,/*#__PURE__*/_jsxs(CheckoutHeaderContainer,{children:[/*#__PURE__*/_jsx(CheckoutHeaderBlock,{children:/*#__PURE__*/_jsx(\"span\",{children:\"Product\"})}),/*#__PURE__*/_jsx(CheckoutHeaderBlock,{children:/*#__PURE__*/_jsx(\"span\",{children:\"Description\"})}),/*#__PURE__*/_jsx(CheckoutHeaderBlock,{children:/*#__PURE__*/_jsx(\"span\",{children:\"Quantity\"})}),/*#__PURE__*/_jsx(CheckoutHeaderBlock,{children:/*#__PURE__*/_jsx(\"span\",{children:\"Price\"})}),/*#__PURE__*/_jsx(CheckoutHeaderBlock,{children:/*#__PURE__*/_jsx(\"span\",{children:\"Remove\"})})]}),cartItems.map(function(cartItem){return/*#__PURE__*/_jsx(CheckoutItem,{cartItem:cartItem},cartItem.id);}),cartItems.length?/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(TotalContainer,{children:/*#__PURE__*/_jsxs(SubtotalSpan,{children:[new Intl.NumberFormat('en-us',{style:'currency',currency:'USD',currencyDisplay:'symbol'}).format(total),\"      subtotal\"]})}),/*#__PURE__*/_jsx(TotalContainer,{children:/*#__PURE__*/_jsxs(SubtotalSpan,{children:[\"(+)   \",new Intl.NumberFormat('en-us',{style:'currency',currency:'USD',currencyDisplay:'symbol'}).format(tax),\"      tax\"]})}),total>0.01&&total<=49.99?/*#__PURE__*/_jsx(TotalContainer,{children:/*#__PURE__*/_jsx(SubtotalSpan,{children:\"Shipping and Handling free on orders over $50.00\"})}):null,/*#__PURE__*/_jsx(TotalContainer,{children:/*#__PURE__*/_jsxs(\"span\",{children:[\"Amount Due  \",new Intl.NumberFormat('en-us',{style:'currency',currency:'USD',currencyDisplay:'symbol'}).format(total+tax)]})}),/*#__PURE__*/_jsxs(TestWarningccinfoContainer,{children:[\"* * * * \",/*#__PURE__*/_jsx(\"br\",{}),\"Please use the folowing credit card for payments\",/*#__PURE__*/_jsx(\"br\",{}),\"4242 4242 4242 4242\",/*#__PURE__*/_jsx(\"br\",{}),\"Exp: 11/26 -- CVV: 424\",/*#__PURE__*/_jsx(StripeCheckoutButton,{price:new Intl.NumberFormat('en-us',{style:'currency',currency:'USD',currencyDisplay:'symbol'}).format(total+tax)})]})]}):/*#__PURE__*/_jsx(TotalContainer,{children:/*#__PURE__*/_jsx(\"span\",{children:new Intl.NumberFormat('en-us',{style:'currency',currency:'USD',currencyDisplay:'symbol'}).format(total+tax)})})]});};var mapStateToProps=createStructuredSelector({cartItems:selectCartItems,total:selectCartTotal,currentUser:selectCurrentUser});export default connect(mapStateToProps)(CheckoutPage);","map":{"version":3,"sources":["/Users/Zobrist/Desktop/Code/krown_clothing/client/src/pages/checkout/checkout.component.jsx"],"names":["React","Fragment","connect","createStructuredSelector","CheckoutItem","StripeCheckoutButton","selectCartItems","selectCartTotal","selectCurrentUser","CheckoutPageContainer","CheckoutHeaderContainer","SubtotalSpan","CheckoutHeaderBlock","TotalContainer","TestWarningccinfoContainer","CheckoutPage","currentUser","cartItems","total","tax","displayName","map","cartItem","id","length","Intl","NumberFormat","style","currency","currencyDisplay","format","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\nimport StripeCheckoutButton from \"../../components/checkout-button/stripe-button.component\";\nimport { selectCartItems, selectCartTotal } from \"../../redux/cart/cart.selectors\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport {\n    CheckoutPageContainer,\n    CheckoutHeaderContainer,\n    SubtotalSpan,\n    CheckoutHeaderBlock,\n    TotalContainer,\n    TestWarningccinfoContainer\n} from \"./checkout.styles\";\n\nconst CheckoutPage = ({ currentUser, cartItems, total, tax = total * .08 }) => {\n    return(\n    <CheckoutPageContainer>\n\n        {currentUser !== null ? (<Fragment><h3>{currentUser.displayName}'s cart</h3><br /></Fragment>) : (null)}\n        <CheckoutHeaderContainer>\n\n            <CheckoutHeaderBlock><span>Product</span></CheckoutHeaderBlock>\n            <CheckoutHeaderBlock><span>Description</span></CheckoutHeaderBlock>\n            <CheckoutHeaderBlock><span>Quantity</span></CheckoutHeaderBlock>\n            <CheckoutHeaderBlock><span>Price</span></CheckoutHeaderBlock>\n            <CheckoutHeaderBlock><span>Remove</span></CheckoutHeaderBlock>\n        </CheckoutHeaderContainer>\n        {cartItems.map(cartItem => (<CheckoutItem cartItem={cartItem} key={cartItem.id} />))}\n        {cartItems.length\n            ?\n            (\n                <Fragment>\n                    <TotalContainer>\n                        <SubtotalSpan>{new Intl.NumberFormat('en-us', {\n                            style: 'currency',\n                            currency: 'USD',\n                            currencyDisplay: 'symbol',\n                        }).format(total)}      subtotal</SubtotalSpan>\n                    </TotalContainer>\n\n                    <TotalContainer>\n\n                        <SubtotalSpan>(+)   {new Intl.NumberFormat('en-us', {\n                            style: 'currency',\n                            currency: 'USD',\n                            currencyDisplay: 'symbol',\n                        }).format(tax)}      tax</SubtotalSpan>\n\n                    </TotalContainer>\n                    {(total > 0.01 && total <= 49.99) ? (<TotalContainer><SubtotalSpan>Shipping and Handling free on orders over $50.00</SubtotalSpan></TotalContainer>\n                    ) : null}\n                    <TotalContainer>\n\n                        <span>Amount Due  {new Intl.NumberFormat('en-us', {\n                            style: 'currency',\n                            currency: 'USD',\n                            currencyDisplay: 'symbol',\n                        }).format(total + tax)}</span>\n                    </TotalContainer>\n                    <TestWarningccinfoContainer>\n                        * * * * <br />Please use the folowing credit card for payments\n                        <br />\n                        4242 4242 4242 4242\n                        <br />\n                        Exp: 11/26 -- CVV: 424\n                        <StripeCheckoutButton price={new Intl.NumberFormat('en-us', {\n                            style: 'currency',\n                            currency: 'USD',\n                            currencyDisplay: 'symbol',\n                        }).format(total + tax)} />\n                    </TestWarningccinfoContainer>\n\n                </ Fragment>\n            )\n            : <TotalContainer>\n\n                <span>{new Intl.NumberFormat('en-us', {\n                    style: 'currency',\n                    currency: 'USD',\n                    currencyDisplay: 'symbol',\n                }).format(total + tax)}</span>\n            </TotalContainer>\n        }\n    </CheckoutPageContainer>\n    )\n    }\n    \nconst mapStateToProps = createStructuredSelector({\n    cartItems: selectCartItems,\n    total: selectCartTotal,\n    currentUser: selectCurrentUser\n})\nexport default connect(mapStateToProps)(CheckoutPage)"]},"metadata":{},"sourceType":"module"}