{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nconst selectItemsTax = state => state;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity, 0));\nexport const selectCartTax = createSelector([selectCartTotal], (subtotal, taxPercent = 8) => subtotal * (taxPercent / 100));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/Zobrist/Desktop/Code/krown_clothing/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectItemsTax","selectCartItems","cartItems","selectCartItemsCount","reduce","accumalatedQuantity","cartItem","quantity","selectCartTax","selectCartTotal","subtotal","taxPercent","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AACA,MAAMC,cAAc,GAAGF,KAAK,IAAIA,KAAhC;;AACA,OAAO,MAAMG,eAAe,GAAGL,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACG,SAF8B,CAAtC;AAKP,OAAO,MAAMC,oBAAoB,GAAGP,cAAc,CAChD,CAACK,eAAD,CADgD,EAEhDC,SAAS,IACPA,SAAS,CAACE,MAAV,CACE,CAACC,mBAAD,EAAsBC,QAAtB,KACED,mBAAmB,GAAGC,QAAQ,CAACC,QAFnC,EAGE,CAHF,CAH8C,CAA3C;AAUP,OAAO,MAAMC,aAAa,GAAGZ,cAAc,CACzC,CAACa,eAAD,CADyC,EAEzC,CAACC,QAAD,EAAWC,UAAU,GAAG,CAAxB,KAA8BD,QAAQ,IAAIC,UAAU,GAAG,GAAjB,CAFG,CAApC;AAKP,OAAO,MAAMF,eAAe,GAAGb,cAAc,CAC3C,CAACK,eAAD,CAD2C,EAE3CC,SAAS,IACPA,SAAS,CAACE,MAAV,CACE,CAACC,mBAAD,EAAsBC,QAAtB,KACED,mBAAmB,GAAGC,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACM,KAFvD,EAGE,CAHF,CAHyC,CAAtC","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\nconst selectItemsTax = state => state\nexport const selectCartItems = createSelector(\n  [selectCart],\n  cart => cart.cartItems\n);\n\nexport const selectCartItemsCount = createSelector(\n  [selectCartItems],\n  cartItems =>\n    cartItems.reduce(\n      (accumalatedQuantity, cartItem) =>\n        accumalatedQuantity + cartItem.quantity,\n      0\n    )\n);\n\nexport const selectCartTax = createSelector(\n  [selectCartTotal],\n  (subtotal, taxPercent = 8) => subtotal * (taxPercent / 100)\n)\n\nexport const selectCartTotal = createSelector(\n  [selectCartItems],\n  cartItems =>\n    cartItems.reduce(\n      (accumalatedQuantity, cartItem) =>\n        accumalatedQuantity + cartItem.quantity * cartItem.price,\n      0\n    )\n)\n\n"]},"metadata":{},"sourceType":"module"}