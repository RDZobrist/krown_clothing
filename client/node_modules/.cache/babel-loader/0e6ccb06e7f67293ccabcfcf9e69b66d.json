{"ast":null,"code":"var _jsxFileName = \"/Users/Zobrist/Desktop/Code/krown_clothing/client/src/pages/admin-dashboard/admin-dashboard.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { AdminDashboardPageWrapper } from \"./admin-dashboard.styles\";\nimport './admin-dashboard.styles';\nimport { checkAdminCredentials } from '../../redux/admin/admin.user.actions';\nimport { CustomButtonContainer } from \"../../components/custom-button/custom-button.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminDashboard = ({\n  checkAdminCredentials,\n  userCredentials\n}) => {\n  _s();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    checkAdminCredentials(userCredentials);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    checkAdminCredentials({\n      [name]: value\n    });\n  };\n\n  const [adminCredentials, setAdminCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = adminCredentials;\n  return /*#__PURE__*/_jsxDEV(AdminDashboardPageWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"admin-login-form\",\n      onSubmit: event => event.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"email\",\n        name: \"email\",\n        type: \"email\",\n        value: adminCredentials.email,\n        handleChange: handleChange,\n        autoComplete: \"false\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        handleChange: handleChange,\n        name: \"password\",\n        label: \"password\",\n        autoComplete: \"false\",\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        handleSubmit: handleSubmit,\n        children: \" sign in \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminDashboard, \"5RLHNkVIX4xxgz6a8R8Hh49tGuY=\");\n\n_c = AdminDashboard;\n\nconst mapDispatchToProps = dispatch => ({\n  checkAdminCredentials: userCredentials => dispatch(checkAdminCredentials(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(AdminDashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"sources":["/Users/Zobrist/Desktop/Code/krown_clothing/client/src/pages/admin-dashboard/admin-dashboard.component.jsx"],"names":["React","useState","connect","CustomButton","FormInput","AdminDashboardPageWrapper","checkAdminCredentials","CustomButtonContainer","AdminDashboard","userCredentials","handleSubmit","event","preventDefault","handleChange","value","name","target","adminCredentials","setAdminCredentials","email","password","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,SAASC,yBAAT,QAA0C,0BAA1C;AACA,OAAO,0BAAP;AACA,SAASC,qBAAT,QAAsC,sCAAtC;AACA,SAASC,qBAAT,QAAsC,qDAAtC;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEF,EAAAA,qBAAF;AAAyBG,EAAAA;AAAzB,CAAD,KAAgD;AAAA;;AACrE,QAAMC,YAAY,GAAG,MAAMC,KAAN,IAAe;AAClCA,IAAAA,KAAK,CAACC,cAAN;AACAN,IAAAA,qBAAqB,CAACG,eAAD,CAArB;AACD,GAHD;;AAIA,QAAMI,YAAY,GAAGF,KAAK,IAAI;AAC5B,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBJ,KAAK,CAACK,MAA9B;AAEAV,IAAAA,qBAAqB,CAAC;AAAG,OAACS,IAAD,GAAQD;AAAX,KAAD,CAArB;AACD,GAJD;;AAKA,QAAM,CAACG,gBAAD,EAAmBC,mBAAnB,IAA0CjB,QAAQ,CAAC;AAAEkB,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAAxD;AACA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,gBAA5B;AAEA,sBACE,QAAC,yBAAD;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAmC,MAAA,QAAQ,EAAGN,KAAD,IAAWA,KAAK,CAACC,cAAN,EAAxD;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,KAAK,EAAC,OADR;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,KAAK,EAAEK,gBAAgB,CAACE,KAJ1B;AAKE,QAAA,YAAY,EAAEN,YALhB;AAME,QAAA,YAAY,EAAC;AANf;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,SAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,YAAY,EAAEA,YAFhB;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,KAAK,EAAC,UAJR;AAKE,QAAA,YAAY,EAAC,OALf;AAME,QAAA,KAAK,EAAEO;AANT;AAAA;AAAA;AAAA;AAAA,cATF,eAiBE,QAAC,YAAD;AAAc,QAAA,YAAY,EAAEV,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CApCD;;GAAMF,c;;KAAAA,c;;AAqCN,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACtChB,EAAAA,qBAAqB,EAAGG,eAAD,IAAqBa,QAAQ,CAAChB,qBAAqB,CAACG,eAAD,CAAtB;AADd,CAAL,CAAnC;;AAIA,eAAeP,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkCb,cAAlC,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { AdminDashboardPageWrapper } from \"./admin-dashboard.styles\";\nimport './admin-dashboard.styles';\nimport { checkAdminCredentials } from '../../redux/admin/admin.user.actions'\nimport { CustomButtonContainer } from \"../../components/custom-button/custom-button.styles\";\n\nconst AdminDashboard = ({ checkAdminCredentials, userCredentials }) => {\n  const handleSubmit = async event => {\n    event.preventDefault();\n    checkAdminCredentials(userCredentials);\n  };\n  const handleChange = event => {\n    const { value, name } = event.target;\n\n    checkAdminCredentials({  [name]: value });\n  };\n  const [adminCredentials, setAdminCredentials] = useState({ email: '', password: '' })\n  const { email, password } = adminCredentials;\n\n  return (\n    <AdminDashboardPageWrapper >\n      <form className='admin-login-form' onSubmit={(event) => event.preventDefault()}>\n        <FormInput\n          label='email'\n          name='email'\n          type='email'\n          value={adminCredentials.email}\n          handleChange={handleChange}\n          autoComplete='false'\n        />\n        <FormInput\n          type='password'\n          handleChange={handleChange}\n          name='password'\n          label='password'\n          autoComplete='false'\n          value={password}\n        />\n        <CustomButton handleSubmit={handleSubmit}> sign in </CustomButton>\n      </form>\n    </AdminDashboardPageWrapper>\n  )\n};\nconst mapDispatchToProps = dispatch => ({\n  checkAdminCredentials: (userCredentials) => dispatch(checkAdminCredentials(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(AdminDashboard);"]},"metadata":{},"sourceType":"module"}