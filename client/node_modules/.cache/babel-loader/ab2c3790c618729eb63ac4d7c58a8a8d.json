{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/auth';\nimport { FacebookAuthProvider, getAuth, signInWithPopup } from 'firebase/auth';\nexport const signInWithFacebook = () => signInWithPopup(auth, fbProvider).then(result => {\n  // The signed-in user info.\n  const user = result.user; // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n\n  const credential = FacebookAuthProvider.credentialFromResult(result);\n  const accessToken = credential.accessToken;\n  const resultObject = {\n    user,\n    credential,\n    accessToken\n  };\n  return console.log(resultObject); // ...\n}).catch(error => {\n  // Handle Errors here.\n  const errorCode = error.code;\n  const errorMessage = error.message; // The email of the user's account used.\n\n  const email = error.email; // The AuthCredential type that was used.\n\n  const credential = FacebookAuthProvider.credentialFromError(error);\n  const userObjectFacebook = {\n    errorCode,\n    errorMessage,\n    email,\n    credential: credential.accessToken\n  };\n  return console.log(userObjectFacebook); // ...\n});\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCnPhU5FOQJ5iWGPtNYnNYhC2jZJglQ0DM\",\n  authDomain: \"krownclothingdb.firebaseapp.com\",\n  projectId: \"krownclothingdb\",\n  storageBucket: \"krownclothingdb.appspot.com\",\n  messagingSenderId: \"677870554234\",\n  appId: \"1:677870554234:web:1a64600583e3b6042d7fc3\",\n  measurementId: \"G-XNXCM6FTL2\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName = String,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nconst fbProvider = new firebase.auth.FacebookAuthProvider();\nfbProvider.setCustomParameters({\n  'display': 'popup'\n});\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/Zobrist/Code/krown_clothing/src/firebase/firebase.utils.js"],"names":["firebase","FacebookAuthProvider","getAuth","signInWithPopup","signInWithFacebook","auth","fbProvider","then","result","user","credential","credentialFromResult","accessToken","resultObject","console","log","catch","error","errorCode","code","errorMessage","message","email","credentialFromError","userObjectFacebook","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","String","createdAt","Date","set","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle"],"mappings":"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","sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/auth';\nimport {FacebookAuthProvider, getAuth, signInWithPopup} from 'firebase/auth';\n\n\n\n\nexport const signInWithFacebook = ()=>(\n  signInWithPopup(auth, fbProvider)\n  .then((result) => {\n    // The signed-in user info.\n    const user = result.user;\n    // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n    const credential = FacebookAuthProvider.credentialFromResult(result);\n    const accessToken = credential.accessToken;\n    const resultObject = {\n      user,\n      credential,\n      accessToken\n    }\n    return console.log(resultObject)\n    // ...\n  })\n  .catch((error) => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    // The email of the user's account used.\n    const email = error.email;\n    // The AuthCredential type that was used.\n    const credential = FacebookAuthProvider.credentialFromError(error);\n    const userObjectFacebook = {\n      errorCode,\n      errorMessage,\n      email,\n      credential: credential.accessToken\n    }\n    return console.log(userObjectFacebook)\n    // ...\n  })\n)\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCnPhU5FOQJ5iWGPtNYnNYhC2jZJglQ0DM\",\n    authDomain: \"krownclothingdb.firebaseapp.com\",\n    projectId: \"krownclothingdb\",\n    storageBucket: \"krownclothingdb.appspot.com\",\n    messagingSenderId: \"677870554234\",\n    appId: \"1:677870554234:web:1a64600583e3b6042d7fc3\",\n    measurementId: \"G-XNXCM6FTL2\"\n  };\n  firebase.initializeApp(firebaseConfig);\n\n  export const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n  \n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n  \n    const snapShot = await userRef.get();\n  \n    if (!snapShot.exists) {\n      const { displayName = String, email } = userAuth;\n      const createdAt = new Date();\n      try {\n        await userRef.set({\n          displayName,\n          email,\n          createdAt,\n          ...additionalData\n        });\n      } catch (error) {\n        console.log('error creating user', error.message);\n      }\n    }\n  \n    return userRef;\n  };\n  \n\n  \n \n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' }); \n\nconst fbProvider = new firebase.auth.FacebookAuthProvider();\nfbProvider.setCustomParameters({\n  'display': 'popup'\n});\n  export const auth = firebase.auth();\n  export const firestore = firebase.firestore();\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}