{"ast":null,"code":"import _defineProperty from\"/Users/Zobrist/Desktop/Code/krown_clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/Zobrist/Desktop/Code/krown_clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/Zobrist/Desktop/Code/krown_clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/Zobrist/Desktop/Code/krown_clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/Zobrist/Desktop/Code/krown_clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{connect}from'react-redux';import FormInput from'../form-input/form-input.component';import CustomButton from'../custom-button/custom-button.component';import{signupStart as _signupStart}from'../../redux/user/user.actions';import{SignupTitle,SignupContainer}from'./sign-up.styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SignUp=function SignUp(_ref){var signupStart=_ref.signupStart;var _useState=useState({displayName:'',email:'',password:'',confirmPassword:''}),_useState2=_slicedToArray(_useState,2),userCredentials=_useState2[0],setUserCredentials=_useState2[1];var displayName=userCredentials.displayName,email=userCredentials.email,password=userCredentials.password,confirmPassword=userCredentials.confirmPassword;var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();if(!(password!==confirmPassword)){_context.next=4;break;}alert(\"passwords don't match\");return _context.abrupt(\"return\");case 4:signupStart({displayName:displayName,email:email,password:password});case 5:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setUserCredentials(_objectSpread(_objectSpread({},userCredentials),{},_defineProperty({},name,value)));};return/*#__PURE__*/_jsxs(SignupContainer,{children:[/*#__PURE__*/_jsx(SignupTitle,{children:\"I do not have a account\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Sign up with your email and password\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"sign-up-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(FormInput,{type:\"text\",name:\"displayName\",value:displayName,onChange:handleChange,label:\"Display Name\",autocomplete:\"off\",required:true}),/*#__PURE__*/_jsx(FormInput,{type:\"email\",name:\"email\",value:email,onChange:handleChange,label:\"Email\",autocomplete:\"off\",required:true}),/*#__PURE__*/_jsx(FormInput,{type:\"password\",name:\"password\",value:password,onChange:handleChange,autocomplete:\"off\",label:\"Password\",required:true}),/*#__PURE__*/_jsx(FormInput,{type:\"password\",name:\"confirmPassword\",value:confirmPassword,onChange:handleChange,label:\"Confirm Password\",autocomplete:\"off\",required:true}),/*#__PURE__*/_jsx(CustomButton,{type:\"submit\",children:\"SIGN UP\"})]})]});};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{signupStart:function signupStart(userCredentials){return dispatch(_signupStart(userCredentials));}};};export default connect(null,mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/Zobrist/Desktop/Code/krown_clothing/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signupStart","SignupTitle","SignupContainer","SignUp","displayName","email","password","confirmPassword","userCredentials","setUserCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signupStart } from '../../redux/user/user.actions';\nimport { SignupTitle, SignupContainer } from './sign-up.styles';\n\nconst SignUp = ({signupStart}) => {\n  const [userCredentials, setUserCredentials ] = useState({displayName:'',email:'',password:'',confirmPassword:''})\n\n  \n  const { displayName, email, password, confirmPassword } = userCredentials;\n\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n      signupStart({displayName, email, password});\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setUserCredentials({ ...userCredentials, [name]: value });\n  };\n\n \n    return (\n      <SignupContainer>       \n         <SignupTitle>I do not have a account</SignupTitle>\n        <span>Sign up with your email and password</span>\n        <form className='sign-up-form' onSubmit={handleSubmit}>\n          <FormInput\n            type='text'\n            name='displayName'\n            value={displayName}\n            onChange={handleChange}\n            label='Display Name'\n            autocomplete=\"off\"\n            required\n          />\n          <FormInput\n            type='email'\n            name='email'\n            value={email}\n            onChange={handleChange}\n            label='Email'\n            autocomplete=\"off\"\n            required\n          />\n          <FormInput\n            type='password'\n            name='password'\n            value={password}\n            onChange={handleChange}\n            autocomplete=\"off\"\n            label='Password'\n            required\n          />\n          <FormInput\n            type='password'\n            name='confirmPassword'\n            value={confirmPassword}\n            onChange={handleChange}\n            label='Confirm Password'\n            autocomplete=\"off\"\n            required\n          />\n          <CustomButton type='submit'>SIGN UP</CustomButton>\n        </form>\n      </SignupContainer>);\n  \n}\nconst mapDispatchToProps = dispatch => ({\n  signupStart: userCredentials => dispatch(signupStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}