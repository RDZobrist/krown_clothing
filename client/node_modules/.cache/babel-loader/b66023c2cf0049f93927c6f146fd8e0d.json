{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport { auth, googleProvider, facebookProvider, signInWithFacebook, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport UserActionTypes from \"./user.types\";\nimport { googleSigninSuccess, googleSigninFailure, emailSigninSuccess, emailSigninFailure } from './user.actions';\nexport function* signinWithEmailandPwd({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSigninSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    put(emailSigninFailure(error));\n  }\n}\n;\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSigninSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSigninFailure(error));\n  }\n}\nexport function* signinWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(googleSigninFailure(error));\n  }\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signinWithGoogle);\n}\nexport function* onEmailSigninStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signinWithEmailandPwd);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSigninStart)]);\n}","map":{"version":3,"sources":["/Users/Zobrist/Desktop/Code/krown_clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","facebookProvider","signInWithFacebook","createUserProfileDocument","UserActionTypes","googleSigninSuccess","googleSigninFailure","emailSigninSuccess","emailSigninFailure","signinWithEmailandPwd","payload","email","password","user","signInWithEmailAndPassword","userRef","userSnapshot","get","id","data","error","getSnapshotFromUserAuth","userAuth","additionalData","signinWithGoogle","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSigninStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SACEC,IADF,EAEEC,cAFF,EAGEC,gBAHF,EAIEC,kBAJF,EAKEC,yBALF,QAOO,+BAPP;AAQA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,kBAJF,QAKO,gBALP;AAUA,OAAO,UAAUC,qBAAV,CAAgC;AAACC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAV,CAAhC,EAA+D;AACpE,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMd,IAAI,CAACe,0BAAL,CAAgCH,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMG,OAAO,GAAG,MAAMjB,IAAI,CAACK,yBAAD,EAA4BU,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMrB,GAAG,CACPW,kBAAkB,CAAC;AAAEW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADX,CAAT;AAID,GARD,CAQC,OAAMC,KAAN,EAAY;AACXxB,IAAAA,GAAG,CAACY,kBAAkB,CAACY,KAAD,CAAnB,CAAH;AACD;AACF;AAAA;AAGC,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4CC,cAA5C,EAA4D;AACjE,MAAI;AACF,UAAMR,OAAO,GAAG,MAAMjB,IAAI,CACxBK,yBADwB,EAExBmB,QAFwB,EAGxBC,cAHwB,CAA1B;AAKA,UAAMP,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMrB,GAAG,CAACS,mBAAmB,CAAC;AAAEa,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAApB,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACU,mBAAmB,CAACc,KAAD,CAApB,CAAT;AACD;AACF;AAIH,OAAO,UAAUI,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEX,MAAAA;AAAF,QAAW,MAAMd,IAAI,CAAC0B,eAAL,CAAqBzB,cAArB,CAAvB;AACA,UAAMqB,uBAAuB,CAACR,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOO,KAAP,EAAc;AACd,UAAMxB,GAAG,CAACU,mBAAmB,CAACc,KAAD,CAApB,CAAT;AACD;AACF;AAAA;AACD,OAAO,UAAUM,mBAAV,GAAgC;AACrC,QAAM/B,UAAU,CAACS,eAAe,CAACuB,oBAAjB,EAAuCH,gBAAvC,CAAhB;AACD;AACD,OAAO,UAAUI,kBAAV,GAA+B;AACpC,QAAMjC,UAAU,CAACS,eAAe,CAACyB,mBAAjB,EAAsCpB,qBAAtC,CAAhB;AACD;AACD,OAAO,UAAUqB,SAAV,GAAsB;AAC3B,QAAMjC,GAAG,CAAC,CACRC,IAAI,CAAC4B,mBAAD,CADI,EAER5B,IAAI,CAAC8B,kBAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport {\n  auth,\n  googleProvider,\n  facebookProvider,\n  signInWithFacebook,\n  createUserProfileDocument,\n \n} from \"../../firebase/firebase.utils\";\nimport UserActionTypes from \"./user.types\";\nimport {\n  googleSigninSuccess,\n  googleSigninFailure,\n  emailSigninSuccess,\n  emailSigninFailure\n} from './user.actions'\n\n\n\n\nexport function* signinWithEmailandPwd({payload: { email, password}}) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(\n      emailSigninSuccess({ id: userSnapshot.id, ...userSnapshot.data()})\n    )\n\n  }catch(error){\n    put(emailSigninFailure(error))\n  }\n};\n\n\n  export function* getSnapshotFromUserAuth(userAuth, additionalData) {\n    try {\n      const userRef = yield call(\n        createUserProfileDocument,\n        userAuth,\n        additionalData\n      );\n      const userSnapshot = yield userRef.get();\n      yield put(googleSigninSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n    } catch (error) {\n      yield put(googleSigninFailure(error));\n    }\n  }\n\n\n\nexport function* signinWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(googleSigninFailure(error));\n  }\n};\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signinWithGoogle);\n}\nexport function* onEmailSigninStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signinWithEmailandPwd)\n}\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSigninStart)\n  ])\n}"]},"metadata":{},"sourceType":"module"}