{"ast":null,"code":"var _jsxFileName = \"/Users/Zobrist/Desktop/Code/krown_clothing/client/src/components/checkout-button/stripe-button.component.jsx\";\nimport React from \"react\";\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StripeCheckoutButton = ({\n  price\n}) => {\n  const priceForStripe = price * 100;\n  const publishable_key = 'pk_test_51JrB82LXLc6RQBpHwh9xIxjIZEPR9vvVOlT1rcOjDXAS2gubDCmvAPsd81LoJhScB1MjcE8yxsqfbo6jX5VI8Hz300SVfgd3pf';\n\n  const onToken = token => {\n    axios({\n      url: 'letstalktostripe',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token\n      }\n    }).then(response => {\n      alert('pament success');\n    }).catch(error => {\n      console.log();\n    });\n  };\n\n  const onOpened = () => {\n    console.log('stripe payment window opened');\n  };\n\n  const onClosed = () => {\n    console.log('stripe payment window closed');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"total\",\n    children: /*#__PURE__*/_jsxDEV(StripeCheckout, {\n      label: `Pay Now ${price}`,\n      name: \"Krown Clothing\" // the pop-in header title\n      ,\n      description: \"Providing you with all you your fashion since 2018\" // the pop-in header subtitle\n      ,\n      image: \"https://svgshare.com/i/CUz.svg\",\n      description: `Your total is ${price}`,\n      panelLabel: `Pay Now ${price}` // prepended to the amount in the bottom pay button\n      ,\n      billingAddress: true,\n      shippingAddress: true,\n      amount: priceForStripe,\n      stripeKey: publishable_key,\n      currency: \"USD\",\n      email: \"support@krown_clothing.io\" // Note: enabling both zipCode checks and billing or shipping address will\n      // cause zipCheck to be pulled from billing address (set to shipping if none provided).\n      ,\n      zipCode: false,\n      allowRememberMe: true // \"Remember Me\" option (default true)\n      ,\n      token: onToken // submit callback\n      ,\n      opened: onOpened // called when the checkout popin is opened \n      ,\n      closed: onClosed // called when the checkout popin is closed \n      ,\n      reconfigureOnUpdate: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_c = StripeCheckoutButton;\nexport default StripeCheckoutButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"StripeCheckoutButton\");","map":{"version":3,"sources":["/Users/Zobrist/Desktop/Code/krown_clothing/client/src/components/checkout-button/stripe-button.component.jsx"],"names":["React","StripeCheckout","axios","StripeCheckoutButton","price","priceForStripe","publishable_key","onToken","token","url","method","data","amount","then","response","alert","catch","error","console","log","onOpened","onClosed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACxC,QAAMC,cAAc,GAAGD,KAAK,GAAG,GAA/B;AACA,QAAME,eAAe,GAAG,6GAAxB;;AAEA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACrBN,IAAAA,KAAK,CAAC;AACFO,MAAAA,GAAG,EAAE,kBADH;AAEFC,MAAAA,MAAM,EAAE,MAFN;AAGFC,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAEP,cADN;AAEFG,QAAAA;AAFE;AAHJ,KAAD,CAAL,CAOGK,IAPH,CAOQC,QAAQ,IAAI;AAChBC,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACH,KATD,EASGC,KATH,CASSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR;AACH,KAXD;AAYH,GAbD;;AAcA,QAAMC,QAAQ,GAAG,MAAM;AACnBF,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH,GAFD;;AAGA,QAAME,QAAQ,GAAG,MAAM;AACnBH,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACA,QAAC,cAAD;AACI,MAAA,KAAK,EAAG,WAAUf,KAAM,EAD5B;AAEI,MAAA,IAAI,EAAC,gBAFT,CAE0B;AAF1B;AAGI,MAAA,WAAW,EAAC,oDAHhB,CAGqE;AAHrE;AAII,MAAA,KAAK,EAAC,gCAJV;AAKI,MAAA,WAAW,EAAG,iBAAgBA,KAAM,EALxC;AAMI,MAAA,UAAU,EAAG,WAAUA,KAAM,EANjC,CAMmC;AANnC;AAOI,MAAA,cAAc,MAPlB;AAQI,MAAA,eAAe,MARnB;AASI,MAAA,MAAM,EAAEC,cATZ;AAUI,MAAA,SAAS,EAAEC,eAVf;AAWI,MAAA,QAAQ,EAAC,KAXb;AAYI,MAAA,KAAK,EAAC,2BAZV,CAaI;AACA;AAdJ;AAeI,MAAA,OAAO,EAAE,KAfb;AAgBI,MAAA,eAAe,MAhBnB,CAgBoB;AAhBpB;AAiBI,MAAA,KAAK,EAAEC,OAjBX,CAiBoB;AAjBpB;AAkBI,MAAA,MAAM,EAAEa,QAlBZ,CAkBsB;AAlBtB;AAmBI,MAAA,MAAM,EAAEC,QAnBZ,CAmBsB;AAnBtB;AAoBI,MAAA,mBAAmB,EAAE;AApBzB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CAlDD;;KAAMlB,oB;AAoDN,eAAeA,oBAAf","sourcesContent":["import React from \"react\";\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from 'axios';\n\nconst StripeCheckoutButton = ({ price }) => {\n    const priceForStripe = price * 100;\n    const publishable_key = 'pk_test_51JrB82LXLc6RQBpHwh9xIxjIZEPR9vvVOlT1rcOjDXAS2gubDCmvAPsd81LoJhScB1MjcE8yxsqfbo6jX5VI8Hz300SVfgd3pf';\n\n    const onToken = token => {\n        axios({\n            url: 'letstalktostripe',\n            method: 'post',\n            data: {\n                amount: priceForStripe,\n                token\n            }\n        }).then(response => {\n            alert('pament success')\n        }).catch(error => {\n            console.log()\n        })\n    }\n    const onOpened = () => {\n        console.log('stripe payment window opened')\n    }\n    const onClosed = () => {\n        console.log('stripe payment window closed')\n    }\n    return (\n        <div className=\"total\">\n        <StripeCheckout\n            label={`Pay Now ${price}`}\n            name=\"Krown Clothing\" // the pop-in header title\n            description=\"Providing you with all you your fashion since 2018\" // the pop-in header subtitle\n            image=\"https://svgshare.com/i/CUz.svg\" \n            description={`Your total is ${price}`}\n            panelLabel={`Pay Now ${price}`}// prepended to the amount in the bottom pay button\n            billingAddress\n            shippingAddress\n            amount={priceForStripe} \n            stripeKey={publishable_key}\n            currency=\"USD\"\n            email=\"support@krown_clothing.io\"\n            // Note: enabling both zipCode checks and billing or shipping address will\n            // cause zipCheck to be pulled from billing address (set to shipping if none provided).\n            zipCode={false}\n            allowRememberMe // \"Remember Me\" option (default true)\n            token={onToken} // submit callback\n            opened={onOpened} // called when the checkout popin is opened \n            closed={onClosed} // called when the checkout popin is closed \n            reconfigureOnUpdate={false}\n        />\n        </div>\n    )\n}\n\nexport default StripeCheckoutButton;"]},"metadata":{},"sourceType":"module"}