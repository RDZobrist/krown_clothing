{"ast":null,"code":"import _regeneratorRuntime from\"/Users/Zobrist/Desktop/Code/krown_clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsAsync),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsStart),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(shopSagas);import{all,takeLatest,call,put}from'redux-saga/effects';import{firestore,convertCollectionsSnapshotToMap}from\"../../firebase/firebase.utils\";import{fetchCollectionSuccess,fetchCollectionFailure}from'./shop.actions';import ShopActionTypes from'./shop.types';export function fetchCollectionsAsync(){var collectionRef,snapshot,collectionsMap;return _regeneratorRuntime.wrap(function fetchCollectionsAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;collectionRef=firestore.collection('collections');_context.next=4;return collectionRef.get();case 4:snapshot=_context.sent;_context.next=7;return call(convertCollectionsSnapshotToMap,snapshot);case 7:collectionsMap=_context.sent;_context.next=10;return put(fetchCollectionSuccess(collectionsMap));case 10:_context.next=16;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);_context.next=16;return put(fetchCollectionFailure(_context.t0.message));case 16:case\"end\":return _context.stop();}}},_marked,null,[[0,12]]);}export function fetchCollectionsStart(){return _regeneratorRuntime.wrap(function fetchCollectionsStart$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync);case 2:case\"end\":return _context2.stop();}}},_marked2);}export function shopSagas(){return _regeneratorRuntime.wrap(function shopSagas$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([call(fetchCollectionsStart)]);case 2:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["/Users/Zobrist/Desktop/Code/krown_clothing/client/src/redux/shop/shop.sagas.js"],"names":["fetchCollectionsAsync","fetchCollectionsStart","shopSagas","all","takeLatest","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionSuccess","fetchCollectionFailure","ShopActionTypes","collectionRef","collection","get","snapshot","collectionsMap","message","FETCH_COLLECTIONS_START"],"mappings":"iNASiBA,qB,iDAcAC,qB,iDAOAC,S,EA9BjB,OAASC,GAAT,CAAcC,UAAd,CAA0BC,IAA1B,CAAgCC,GAAhC,KAA2C,oBAA3C,CACA,OAASC,SAAT,CAAoBC,+BAApB,KAA2D,+BAA3D,CACA,OACIC,sBADJ,CAEIC,sBAFJ,KAGO,gBAHP,CAIA,MAAOC,CAAAA,eAAP,KAA4B,cAA5B,CAGA,MAAO,SAAUX,CAAAA,qBAAV,2LAEGY,aAFH,CAEmBL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAFnB,iBAGc,MAAMD,CAAAA,aAAa,CAACE,GAAd,EAAN,CAHd,OAGGC,QAHH,+BAIoB,MAAMV,CAAAA,IAAI,CAACG,+BAAD,CAAkCO,QAAlC,CAAV,CAJpB,OAIGC,cAJH,gCAKH,MAAMV,CAAAA,GAAG,CAACG,sBAAsB,CAACO,cAAD,CAAvB,CAAT,CALG,0GAOH,MAAMV,CAAAA,GAAG,CAACI,sBAAsB,CAAC,YAAMO,OAAP,CAAvB,CAAT,CAPG,qEAcP,MAAO,SAAUhB,CAAAA,qBAAV,qJACH,MAAMG,CAAAA,UAAU,CACZO,eAAe,CAACO,uBADJ,CAEZlB,qBAFY,CAAhB,CADG,wDAOP,MAAO,SAAUE,CAAAA,SAAV,yIACH,MAAMC,CAAAA,GAAG,CAAC,CAACE,IAAI,CAACJ,qBAAD,CAAL,CAAD,CAAT,CADG","sourcesContent":["import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport {\n    fetchCollectionSuccess,\n    fetchCollectionFailure\n} from './shop.actions';\nimport ShopActionTypes from './shop.types';\n\n\nexport function* fetchCollectionsAsync() {\n    try{\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();    \n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionsMap));\n   }catch (error){\n    yield put(fetchCollectionFailure(error.message));\n    }\n \n       \n       \n}\n\nexport function* fetchCollectionsStart() {\n    yield takeLatest(\n        ShopActionTypes.FETCH_COLLECTIONS_START, \n        fetchCollectionsAsync\n    );\n}\n\nexport function* shopSagas() {\n    yield all([call(fetchCollectionsStart)])\n}"]},"metadata":{},"sourceType":"module"}