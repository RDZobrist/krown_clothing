{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport { auth, googleProvider, facebookProvider, createUserProfileDocument, signInWithFacebook } from \"../../firebase/firebase.utils\";\nimport UserActionTypes from \"./user.types\";\nimport { googleSigninSuccess, googleSigninFailure } from './user.actions';\nexport function* signinWithGoogle() {\n  console.log('WE HAVE MADE IT HERRRe');\n\n  try {\n    console.log(auth.signInWithPopup(goo));\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(googleSigninFailure(error));\n  }\n}\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSigninSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSigninFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signinWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(signinWithGoogle)]);\n}","map":{"version":3,"sources":["/Users/Zobrist/Desktop/Code/krown_clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","facebookProvider","createUserProfileDocument","signInWithFacebook","UserActionTypes","googleSigninSuccess","googleSigninFailure","signinWithGoogle","console","log","signInWithPopup","goo","user","getSnapshotFromUserAuth","error","userAuth","additionalData","userRef","userSnapshot","get","id","data","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SACEC,IADF,EAEEC,cAFF,EAGEC,gBAHF,EAIEC,yBAJF,EAKEC,kBALF,QAMO,+BANP;AAOA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,mBADF,EAEEC,mBAFF,QAGO,gBAHP;AAMA,OAAO,UAAUC,gBAAV,GAA6B;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AACA,MAAI;AACFD,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACW,eAAL,CAAqBC,GAArB,CAAZ;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMb,IAAI,CAACW,eAAL,CAAqBV,cAArB,CAAvB;AACA,UAAMa,uBAAuB,CAACD,IAAD,CAA7B;AACD,GAJD,CAIE,OAAOE,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACU,mBAAmB,CAACQ,KAAD,CAApB,CAAT;AACD;AACF;AAIC,OAAO,UAAUD,uBAAV,CAAkCE,QAAlC,EAA4CC,cAA5C,EAA4D;AACjE,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMnB,IAAI,CACxBI,yBADwB,EAExBa,QAFwB,EAGxBC,cAHwB,CAA1B;AAKA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMvB,GAAG,CAACS,mBAAmB,CAAC;AAAEe,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAApB,CAAT;AACD,GARD,CAQE,OAAOP,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACU,mBAAmB,CAACQ,KAAD,CAApB,CAAT;AACD;AACF;AAGH,OAAO,UAAUQ,mBAAV,GAAgC;AACrC,QAAM3B,UAAU,CAACS,eAAe,CAACmB,oBAAjB,EAAuChB,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUiB,SAAV,GAAsB;AAC3B,QAAM3B,GAAG,CAAC,CACRC,IAAI,CAACwB,mBAAD,CADI,EAERxB,IAAI,CAACS,gBAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport {\n  auth,\n  googleProvider,\n  facebookProvider,\n  createUserProfileDocument,\n  signInWithFacebook,\n} from \"../../firebase/firebase.utils\";\nimport UserActionTypes from \"./user.types\";\nimport {\n  googleSigninSuccess,\n  googleSigninFailure\n} from './user.actions'\n\n\nexport function* signinWithGoogle() {\n  console.log('WE HAVE MADE IT HERRRe')\n  try {\n    console.log(auth.signInWithPopup(goo))\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(googleSigninFailure(error));\n  }\n}\n\n\n\n  export function* getSnapshotFromUserAuth(userAuth, additionalData) {\n    try {\n      const userRef = yield call(\n        createUserProfileDocument,\n        userAuth,\n        additionalData\n      );\n      const userSnapshot = yield userRef.get();\n      yield put(googleSigninSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n    } catch (error) {\n      yield put(googleSigninFailure(error));\n    }\n  }\n\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signinWithGoogle);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(signinWithGoogle)\n  ])\n}"]},"metadata":{},"sourceType":"module"}