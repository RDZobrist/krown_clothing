{"ast":null,"code":"var _jsxFileName = \"/Users/Zobrist/Desktop/Code/krown_clothing/client/src/pages/admin-dashboard/admin-dashboard.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { AdminDashboardPageWrapper } from \"./admin-dashboard.styles\";\nimport './admin-dashboard.styles';\nimport { checkAdminCredentials } from '../../redux/admin/admin.user.actions';\nimport { CustomButtonContainer } from \"../../components/custom-button/custom-button.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminDashboard = (checkAdminCredentials, userCredentials) => {\n  _s();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    checkAdminCredentials(userCredentials);\n  };\n\n  const [adminCredentials, setAdminCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = adminCredentials;\n  return /*#__PURE__*/_jsxDEV(AdminDashboardPageWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"admin-login-form\",\n      onSubmit: event => event.pr,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"email\",\n        type: \"email\",\n        autoComplete: false,\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        label: \"password\",\n        autoComplete: false,\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        children: \" sign in \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminDashboard, \"lBvBc8wfiCqliEvJdTg3UcHFBvs=\");\n\n_c = AdminDashboard;\n\nconst mapDispatchToProps = dispatch => ({\n  checkAdminCredentials: userCredentials => dispatch(checkAdminCredentials(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(AdminDashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"sources":["/Users/Zobrist/Desktop/Code/krown_clothing/client/src/pages/admin-dashboard/admin-dashboard.component.jsx"],"names":["React","useState","connect","CustomButton","FormInput","AdminDashboardPageWrapper","checkAdminCredentials","CustomButtonContainer","AdminDashboard","userCredentials","handleSubmit","event","preventDefault","adminCredentials","setAdminCredentials","email","password","pr","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,SAASC,yBAAT,QAA0C,0BAA1C;AACA,OAAO,0BAAP;AACA,SAASC,qBAAT,QAAsC,sCAAtC;AACA,SAASC,qBAAT,QAAsC,qDAAtC;;;AAEA,MAAMC,cAAc,GAAG,CAAEF,qBAAF,EAAyBG,eAAzB,KAA8C;AAAA;;AAC7D,QAAMC,YAAY,GAAG,MAAMC,KAAN,IAAe;AACpCA,IAAAA,KAAK,CAACC,cAAN;AACIN,IAAAA,qBAAqB,CAACG,eAAD,CAArB;AACL,GAHC;;AAIJ,QAAM,CAACI,gBAAD,EAAmBC,mBAAnB,IAA0Cb,QAAQ,CAAC;AAAEc,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAAxD;AACA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,gBAA5B;AACA,sBACA,QAAC,yBAAD;AAAA,2BACI;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAmC,MAAA,QAAQ,EAAGF,KAAD,IAAUA,KAAK,CAACM,EAA7D;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAyB,QAAA,IAAI,EAAC,OAA9B;AAAsC,QAAA,YAAY,EAAE,KAApD;AAA2D,QAAA,KAAK,EAAEF;AAAlE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAC,UAAhB;AAA2B,QAAA,KAAK,EAAC,UAAjC;AAA4C,QAAA,YAAY,EAAE,KAA1D;AAAiE,QAAA,KAAK,EAAEC;AAAxE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AASH,CAhBD;;GAAMR,c;;KAAAA,c;;AAiBN,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACpCb,EAAAA,qBAAqB,EAAGG,eAAD,IAAqBU,QAAQ,CAACb,qBAAqB,CAACG,eAAD,CAAtB;AADhB,CAAL,CAAnC;;AAIA,eAAeP,OAAO,CAAC,IAAD,EAAOgB,kBAAP,CAAP,CAAkCV,cAAlC,CAAf","sourcesContent":["import React, { useState} from \"react\";\nimport { connect } from 'react-redux';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { AdminDashboardPageWrapper } from \"./admin-dashboard.styles\";\nimport './admin-dashboard.styles';\nimport { checkAdminCredentials } from '../../redux/admin/admin.user.actions'\nimport { CustomButtonContainer } from \"../../components/custom-button/custom-button.styles\";\n\nconst AdminDashboard = ( checkAdminCredentials, userCredentials ) => {\n        const handleSubmit = async event => {\n        event.preventDefault();\n            checkAdminCredentials(userCredentials);\n      };\n    const [adminCredentials, setAdminCredentials] = useState({ email: '', password: ''})\n    const { email, password } = adminCredentials;\n    return(\n    <AdminDashboardPageWrapper >\n        <form className='admin-login-form' onSubmit={(event)=> event.pr}>\n          <FormInput label='email' type='email' autoComplete={false} value={email}/>\n          <FormInput type='password' label='password' autoComplete={false} value={password}/>\n          <CustomButton > sign in </CustomButton>\n        </form>\n    </AdminDashboardPageWrapper>\n    )\n};\nconst mapDispatchToProps = dispatch => ({\n    checkAdminCredentials: (userCredentials) => dispatch(checkAdminCredentials(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(AdminDashboard);"]},"metadata":{},"sourceType":"module"}