{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport UserActionTypes from \"./user.types\";\nimport { signinSuccess, signinFailure, signupFailure, signupSuccess, signoutSuccess, signoutFailure } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signinSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n}\n;\nexport function* signupWithEmailandPwd({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  console.log('ive been called');\n\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(sign({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signupFailure(error));\n  }\n}\n;\nexport function* onSignupSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signinAfterSignup);\n}\n;\nexport function* signinAfterSignup({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\n;\nexport function* signinWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n}\n;\nexport function* signinWithEmailandPwd({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signinSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    put(signinFailure(error));\n  }\n}\n;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n}\n;\nexport function* signUserOut() {\n  try {\n    yield auth.signOut();\n    yield put(signoutSuccess());\n  } catch (error) {\n    yield put(signoutFailure(error));\n  }\n}\n; // **__**__** SAGA GENERATOR LISTENERS **__**__** \\\\\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signinWithGoogle);\n}\n;\nexport function* onEmailSigninStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signinWithEmailandPwd);\n}\n;\nexport function* onSignupStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signupWithEmailandPwd);\n}\n;\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n;\nexport function* onStartUserSignout() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signUserOut);\n}\n;\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSigninStart), call(onCheckUserSession), call(onStartUserSignout)]);\n}\n;","map":{"version":3,"sources":["/Users/Zobrist/Desktop/Code/krown_clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","getCurrentUser","UserActionTypes","signinSuccess","signinFailure","signupFailure","signupSuccess","signoutSuccess","signoutFailure","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signupWithEmailandPwd","payload","email","password","displayName","console","log","user","createUserWithEmailAndPassword","sign","onSignupSuccess","SIGN_UP_SUCCESS","signinAfterSignup","signinWithGoogle","signInWithPopup","signinWithEmailandPwd","signInWithEmailAndPassword","isUserAuthenticated","signUserOut","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSigninStart","EMAIL_SIGN_IN_START","onSignupStart","SIGN_UP_START","onCheckUserSession","CHECK_USER_SESSION","onStartUserSignout","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser\n\n} from \"../../firebase/firebase.utils\";\n\nimport UserActionTypes from \"./user.types\";\nimport {\n  signinSuccess,\n  signinFailure,\n  signupFailure,\n  signupSuccess,\n  signoutSuccess,\n  signoutFailure,\n} from './user.actions';\n\n\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(\n      createUserProfileDocument,\n      userAuth,\n      additionalData\n    );\n    const userSnapshot = yield userRef.get();\n    yield put(signinSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n};\n\n\n\nexport function* signupWithEmailandPwd({ payload: { email, password, displayName } }) {\n  console.log('ive been called')\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(\n      email,\n      password\n    );\n    yield put(sign({ user, additionalData: { displayName } }));\n  }\n  catch (error) {\n    yield put(signupFailure(error))\n  }\n};\n\nexport function* onSignupSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signinAfterSignup);\n};\n\nexport function* signinAfterSignup({ payload: { user, additionalData } }) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n};\n\n\n\nexport function* signinWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n};\n\nexport function* signinWithEmailandPwd({ payload: { email, password, displayName  } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n\n    yield put(\n     signinSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    )\n  }\n  catch (error) {\n    put(signinFailure(error))\n  }\n};\n\nexport function* isUserAuthenticated() {\n  try{\n    const userAuth = yield getCurrentUser();\n    if(!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  }catch (error){\n    yield put(signinFailure(error));\n  }\n};\n\nexport function* signUserOut() {\n  try {\n    yield auth.signOut();\n    yield put(signoutSuccess());\n  } catch (error) {\n    yield put(signoutFailure(error));\n  }\n};\n\n// **__**__** SAGA GENERATOR LISTENERS **__**__** \\\\\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signinWithGoogle);\n}; \nexport function* onEmailSigninStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signinWithEmailandPwd)\n};\nexport function* onSignupStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signupWithEmailandPwd);\n};\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n};\nexport function* onStartUserSignout() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signUserOut)\n};\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSigninStart),\n    call(onCheckUserSession),\n    call(onStartUserSignout)\n  ]);\n};"]},"metadata":{},"sourceType":"module"}