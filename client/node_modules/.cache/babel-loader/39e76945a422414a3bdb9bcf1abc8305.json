{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/auth';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCnPhU5FOQJ5iWGPtNYnNYhC2jZJglQ0DM\",\n  authDomain: \"krownclothingdb.firebaseapp.com\",\n  projectId: \"krownclothingdb\",\n  storageBucket: \"krownclothingdb.appspot.com\",\n  messagingSenderId: \"677870554234\",\n  appId: \"1:677870554234:web:1a64600583e3b6042d7fc3\",\n  measurementId: \"G-XNXCM6FTL2\"\n};\nfirebase.initializeApp(config);\nexport const signInWithFacebook = () => signInWithPopup(auth, fbProvider).then(result => {\n  // The signed-in user info.\n  const user = result.user; // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n\n  const credential = FacebookAuthProvider.credentialFromResult(result);\n  const accessToken = credential.accessToken;\n  const resultObject = {\n    user,\n    credential,\n    accessToken\n  };\n  return console.log(resultObject); // ...\n}).catch(error => {\n  // Handle Errors here.\n  const errorCode = error.code;\n  const errorMessage = error.message; // The email of the user's account used.\n\n  const email = error.email; // The AuthCredential type that was used.\n\n  const credential = FacebookAuthProvider.credentialFromError(error);\n  console.log(error); // ...\n});\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/Zobrist/Desktop/Code/krown_clothing/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","config","signInWithFacebook","signInWithPopup","auth","fbProvider","then","result","user","credential","FacebookAuthProvider","credentialFromResult","accessToken","resultObject","console","log","catch","error","errorCode","code","errorMessage","message","email","credentialFromError","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","createdAt","Date","set","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAO,2BAAP;AACA,OAAO,sBAAP;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,iCAFS;AAGrBC,EAAAA,SAAS,EAAE,iBAHU;AAIrBC,EAAAA,aAAa,EAAE,6BAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE,2CANc;AAOrBC,EAAAA,aAAa,EAAE;AAPM,CAAvB;AAUAR,QAAQ,CAACS,aAAT,CAAuBC,MAAvB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAChCC,eAAe,CAACC,IAAD,EAAOC,UAAP,CAAf,CACCC,IADD,CACOC,MAAD,IAAY;AAChB;AACA,QAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB,CAFgB,CAGhB;;AACA,QAAMC,UAAU,GAAGC,oBAAoB,CAACC,oBAArB,CAA0CJ,MAA1C,CAAnB;AACA,QAAMK,WAAW,GAAGH,UAAU,CAACG,WAA/B;AACA,QAAMC,YAAY,GAAG;AACnBL,IAAAA,IADmB;AAEnBC,IAAAA,UAFmB;AAGnBG,IAAAA;AAHmB,GAArB;AAKA,SAAOE,OAAO,CAACC,GAAR,CAAYF,YAAZ,CAAP,CAXgB,CAYhB;AACD,CAdD,EAeCG,KAfD,CAeQC,KAAD,IAAW;AAChB;AACA,QAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,QAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B,CAHgB,CAIhB;;AACA,QAAMC,KAAK,GAAGL,KAAK,CAACK,KAApB,CALgB,CAMhB;;AACA,QAAMb,UAAU,GAAGC,oBAAoB,CAACa,mBAArB,CAAyCN,KAAzC,CAAnB;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ,EARgB,CAShB;AACD,CAzBD,CADK;AA+BP,OAAO,MAAMO,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeZ,MAAAA;AAAf,QAAyBG,QAA/B;AACA,UAAMU,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMT,OAAO,CAACU,GAAR,CAAY;AAChBH,QAAAA,WADgB;AAEhBZ,QAAAA,KAFgB;AAGhBa,QAAAA,SAHgB;AAIhB,WAAGT;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOT,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCE,KAAK,CAACI,OAAzC;AACD;AACF;;AAED,SAAOM,OAAP;AACD,CAvBM;AAyBP,OAAO,MAAMvB,IAAI,GAAGb,QAAQ,CAACa,IAAT,EAAb;AACP,OAAO,MAAMwB,SAAS,GAAGrC,QAAQ,CAACqC,SAAT,EAAlB;AAEP,MAAMU,QAAQ,GAAG,IAAI/C,QAAQ,CAACa,IAAT,CAAcmC,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAMtC,IAAI,CAACD,eAAL,CAAqBmC,QAArB,CAA/B;AAEP,eAAe/C,QAAf","sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/auth';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCnPhU5FOQJ5iWGPtNYnNYhC2jZJglQ0DM\",\n  authDomain: \"krownclothingdb.firebaseapp.com\",\n  projectId: \"krownclothingdb\",\n  storageBucket: \"krownclothingdb.appspot.com\",\n  messagingSenderId: \"677870554234\",\n  appId: \"1:677870554234:web:1a64600583e3b6042d7fc3\",\n  measurementId: \"G-XNXCM6FTL2\"\n};\n\nfirebase.initializeApp(config);\n\nexport const signInWithFacebook = ()=>(\n  signInWithPopup(auth, fbProvider)\n  .then((result) => {\n    // The signed-in user info.\n    const user = result.user;\n    // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n    const credential = FacebookAuthProvider.credentialFromResult(result);\n    const accessToken = credential.accessToken;\n    const resultObject = {\n      user,\n      credential,\n      accessToken\n    }\n    return console.log(resultObject)\n    // ...\n  })\n  .catch((error) => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    // The email of the user's account used.\n    const email = error.email;\n    // The AuthCredential type that was used.\n    const credential = FacebookAuthProvider.credentialFromError(error);\n    console.log(error)\n    // ...\n  })\n)\n\n\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}