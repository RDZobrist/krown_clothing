{"ast":null,"code":"var _jsxFileName = \"/Users/Zobrist/Desktop/Code/krown_clothing/src/components/cart-icon/cart-icon.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport { selectCartItemsCount } from '../../redux/cart/cart.selectors';\nimport { ReactComponent as ShoppingIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/shopping-bag.svg\";\nimport './cart-icon.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet renderCount = 1;\n\nconst CartIcon = ({\n  toggleCartHidden,\n  itemCount\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"cart-icon\",\n  onClick: toggleCartHidden,\n  children: [/*#__PURE__*/_jsxDEV(ShoppingIcon, {\n    className: \"shopping-icon\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"item-count\",\n    children: itemCount\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this);\n\n_c = CartIcon;\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nconst mapStateToProps = ({\n  cart: {\n    cartItems\n  }\n}) => {\n  renderCount + 1;\n  console.log(`I have been called and rendered ${renderCount} times.`);\n  return {\n    itemCount: cartItems.reduce((accumaltedQuantity, cartItem) => accumaltedQuantity + cartItem.quantity, 0)\n  };\n}; // const mapStateToProps = state => ({\n//   itemCount: selectCartItemsCount(state)\n// });\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartIcon);\n\nvar _c;\n\n$RefreshReg$(_c, \"CartIcon\");","map":{"version":3,"sources":["/Users/Zobrist/Desktop/Code/krown_clothing/src/components/cart-icon/cart-icon.component.jsx"],"names":["React","connect","toggleCartHidden","selectCartItemsCount","renderCount","CartIcon","itemCount","mapDispatchToProps","dispatch","mapStateToProps","cart","cartItems","console","log","reduce","accumaltedQuantity","cartItem","quantity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,oBAAT,QAAqC,iCAArC;;AAIA,OAAO,yBAAP;;AACA,IAAIC,WAAW,GAAG,CAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEH,EAAAA,gBAAF;AAAoBI,EAAAA;AAApB,CAAD,kBACf;AAAK,EAAA,SAAS,EAAC,WAAf;AAA2B,EAAA,OAAO,EAAEJ,gBAApC;AAAA,0BACE,QAAC,YAAD;AAAc,IAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA,cAA8BI;AAA9B;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMD,Q;;AAON,MAAME,kBAAkB,GAAGC,QAAQ,KAAK;AACtCN,EAAAA,gBAAgB,EAAE,MAAMM,QAAQ,CAACN,gBAAgB,EAAjB;AADM,CAAL,CAAnC;;AAGA,MAAMO,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF;AAAR,CAAD,KAA6B;AACnDP,EAAAA,WAAW,GAAG,CAAd;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAa,mCAAkCT,WAAY,SAA3D;AAEA,SAAO;AACLE,IAAAA,SAAS,EAAEK,SAAS,CAACG,MAAV,CAAiB,CAACC,kBAAD,EAAqBC,QAArB,KAC1BD,kBAAkB,GAAGC,QAAQ,CAACC,QADrB,EAET,CAFS;AADN,GAAP;AAMD,CAVD,C,CAWA;AACA;AACA;;;AAEA,eAAehB,OAAO,CACpBQ,eADoB,EAEpBF,kBAFoB,CAAP,CAGbF,QAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\nimport { selectCartItemsCount } from '../../redux/cart/cart.selectors';\n\nimport { ReactComponent as ShoppingIcon } from '../../assets/shopping-bag.svg';\n\nimport './cart-icon.styles.scss';\nlet renderCount = 1;\n\nconst CartIcon = ({ toggleCartHidden, itemCount }) => (\n  <div className='cart-icon' onClick={toggleCartHidden}>\n    <ShoppingIcon className='shopping-icon' />\n    <span className='item-count'>{itemCount}</span>\n  </div>\n);\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\nconst mapStateToProps = ({ cart: { cartItems } }) => {\n  renderCount + 1;\n  console.log(`I have been called and rendered ${renderCount} times.`);\n\n  return {\n    itemCount: cartItems.reduce((accumaltedQuantity, cartItem) =>\n      accumaltedQuantity + cartItem.quantity,\n      0\n    )\n  };\n};\n// const mapStateToProps = state => ({\n//   itemCount: selectCartItemsCount(state)\n// });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CartIcon);\n"]},"metadata":{},"sourceType":"module"}