{"ast":null,"code":"var _jsxFileName = \"/Users/Zobrist/Desktop/Code/krown_clothing/client/src/pages/admin-dashboard/admin-dashboard.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { AdminDashboardPageWrapper } from \"./admin-dashboard.styles\";\nimport './admin-dashboard.styles';\nimport { checkAdminCredentials } from '../../redux/admin/admin.user.actions';\nimport { CustomButtonContainer } from \"../../components/custom-button/custom-button.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  email,\n  password\n} = adminCredentials;\n\nconst AdminDashboard = ({\n  checkAdminCredentials,\n  userCredentials\n}) => {\n  _s();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    checkAdminCredentials(userCredentials);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    checkAdminCredentials({\n      [name]: value\n    });\n  };\n\n  const [adminCredentials, setAdminCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  return /*#__PURE__*/_jsxDEV(AdminDashboardPageWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"admin-login-form\",\n      onSubmit: event => event.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"email\",\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        handleChange: handleChange,\n        autoComplete: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        handleChange: handleChange,\n        name: \"password\",\n        label: \"password\",\n        autoComplete: false,\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        handleSubmit: handleSubmit,\n        children: \" sign in \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminDashboard, \"lBvBc8wfiCqliEvJdTg3UcHFBvs=\");\n\n_c = AdminDashboard;\n\nconst mapDispatchToProps = dispatch => ({\n  checkAdminCredentials: userCredentials => dispatch(checkAdminCredentials(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(AdminDashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"sources":["/Users/Zobrist/Desktop/Code/krown_clothing/client/src/pages/admin-dashboard/admin-dashboard.component.jsx"],"names":["React","useState","connect","CustomButton","FormInput","AdminDashboardPageWrapper","checkAdminCredentials","CustomButtonContainer","email","password","adminCredentials","AdminDashboard","userCredentials","handleSubmit","event","preventDefault","handleChange","value","name","target","setAdminCredentials","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,SAASC,yBAAT,QAA0C,0BAA1C;AACA,OAAO,0BAAP;AACA,SAASC,qBAAT,QAAsC,sCAAtC;AACA,SAASC,qBAAT,QAAsC,qDAAtC;;AACA,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAAsBC,gBAA5B;;AAEA,MAAMC,cAAc,GAAG,CAAE;AAACL,EAAAA,qBAAD;AAAwBM,EAAAA;AAAxB,CAAF,KAAgD;AAAA;;AAC/D,QAAMC,YAAY,GAAG,MAAMC,KAAN,IAAe;AACpCA,IAAAA,KAAK,CAACC,cAAN;AACIT,IAAAA,qBAAqB,CAACM,eAAD,CAArB;AACL,GAHC;;AAIF,QAAMI,YAAY,GAAGF,KAAK,IAAI;AAC5B,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBJ,KAAK,CAACK,MAA9B;AAEAb,IAAAA,qBAAqB,CAAC;AAAG,OAACY,IAAD,GAAQD;AAAX,KAAD,CAArB;AACD,GAJD;;AAKF,QAAM,CAACP,gBAAD,EAAmBU,mBAAnB,IAA0CnB,QAAQ,CAAC;AAAEO,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAAxD;AACA,sBACA,QAAC,yBAAD;AAAA,2BACI;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAmC,MAAA,QAAQ,EAAGK,KAAD,IAAUA,KAAK,CAACC,cAAN,EAAvD;AAAA,8BACE,QAAC,SAAD;AACA,QAAA,KAAK,EAAC,OADN;AAEC,QAAA,IAAI,EAAC,OAFN;AAGC,QAAA,IAAI,EAAC,OAHN;AAIC,QAAA,KAAK,EAAEP,KAJR;AAKC,QAAA,YAAY,EAAEQ,YALf;AAMI,QAAA,YAAY,EAAE;AANlB;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,SAAD;AACA,QAAA,IAAI,EAAC,UADL;AAEC,QAAA,YAAY,EAAEA,YAFf;AAGE,QAAA,IAAI,EAAC,UAHP;AAIG,QAAA,KAAK,EAAC,UAJT;AAKI,QAAA,YAAY,EAAE,KALlB;AAMK,QAAA,KAAK,EAAEP;AANZ;AAAA;AAAA;AAAA;AAAA,cATF,eAgBE,QAAC,YAAD;AAAc,QAAA,YAAY,EAAEI,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAsBH,CAjCD;;GAAMF,c;;KAAAA,c;;AAkCN,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACpChB,EAAAA,qBAAqB,EAAGM,eAAD,IAAqBU,QAAQ,CAAChB,qBAAqB,CAACM,eAAD,CAAtB;AADhB,CAAL,CAAnC;;AAIA,eAAeV,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkCV,cAAlC,CAAf","sourcesContent":["import React, { useState} from \"react\";\nimport { connect } from 'react-redux';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { AdminDashboardPageWrapper } from \"./admin-dashboard.styles\";\nimport './admin-dashboard.styles';\nimport { checkAdminCredentials } from '../../redux/admin/admin.user.actions'\nimport { CustomButtonContainer } from \"../../components/custom-button/custom-button.styles\";\nconst { email, password } = adminCredentials;\n\nconst AdminDashboard = ( {checkAdminCredentials, userCredentials} ) => {\n        const handleSubmit = async event => {\n        event.preventDefault();\n            checkAdminCredentials(userCredentials);\n      };\n      const handleChange = event => {\n        const { value, name } = event.target;\n    \n        checkAdminCredentials({  [name]: value });\n      };\n    const [adminCredentials, setAdminCredentials] = useState({ email: '', password: ''})\n    return(\n    <AdminDashboardPageWrapper >\n        <form className='admin-login-form' onSubmit={(event)=> event.preventDefault()}>\n          <FormInput \n          label='email'\n           name='email'\n           type='email'\n           value={email}\n           handleChange={handleChange}\n              autoComplete={false}\n               />\n          <FormInput \n          type='password'\n           handleChange={handleChange}\n            name='password'\n             label='password'\n              autoComplete={false}\n               value={password}/>\n          <CustomButton handleSubmit={handleSubmit}> sign in </CustomButton>\n        </form>\n    </AdminDashboardPageWrapper>\n    )\n};\nconst mapDispatchToProps = dispatch => ({\n    checkAdminCredentials: (userCredentials) => dispatch(checkAdminCredentials(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(AdminDashboard);"]},"metadata":{},"sourceType":"module"}