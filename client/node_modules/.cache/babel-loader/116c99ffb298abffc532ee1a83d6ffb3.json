{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport UserActionTypes from \"./user.types\";\nimport { signinSuccess, signinFailure, signupFailure, signupSuccess, checkUserSession } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signinSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n}\n;\nexport function* signupWithEmailandPwd({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(onSignupSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signupFailure(error));\n  }\n}\n;\nexport function* onSignupSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signinAfterSignup);\n}\n;\nexport function* signinAfterSignup({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\n;\nexport function* signinWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n}\n;\nexport function* signinWithEmailandPwd({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    console.log(user);\n    yield put(signinSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    put(signinFailure(error));\n  }\n}\n;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield checkUserSession();\n    console.log(user);\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signinWithGoogle);\n}\n;\nexport function* onEmailSigninStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signinWithEmailandPwd);\n}\n;\nexport function* onSignupStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signupWithEmailandPwd);\n}\n;\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSigninStart)]);\n}","map":{"version":3,"sources":["/Users/Zobrist/Desktop/Code/krown_clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","getCurrentUser","UserActionTypes","signinSuccess","signinFailure","signupFailure","signupSuccess","checkUserSession","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signupWithEmailandPwd","payload","email","password","displayName","user","createUserWithEmailAndPassword","onSignupSuccess","SIGN_UP_SUCCESS","signinAfterSignup","signinWithGoogle","signInWithPopup","signinWithEmailandPwd","signInWithEmailAndPassword","console","log","isUserAuthenticated","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSigninStart","EMAIL_SIGN_IN_START","onSignupStart","SIGN_UP_START","onCheckUserSession","CHECK_USER_SESSION","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,EAIEC,cAJF,QAMO,+BANP;AAQA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,gBALF,QAMO,gBANP;AAUA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4CC,cAA5C,EAA4D;AACjE,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMd,IAAI,CACxBG,yBADwB,EAExBS,QAFwB,EAGxBC,cAHwB,CAA1B;AAKA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMlB,GAAG,CAACQ,aAAa,CAAC;AAAEW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CAAd,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMrB,GAAG,CAACS,aAAa,CAACY,KAAD,CAAd,CAAT;AACD;AACF;AAAA;AAID,OAAO,UAAUC,qBAAV,CAAgC;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB;AAAX,CAAhC,EAA+E;AACpF,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMxB,IAAI,CAACyB,8BAAL,CACrBJ,KADqB,EAErBC,QAFqB,CAAvB;AAIA,UAAMzB,GAAG,CAAC6B,eAAe,CAAC;AAAEF,MAAAA,IAAF;AAAQZ,MAAAA,cAAc,EAAE;AAAEW,QAAAA;AAAF;AAAxB,KAAD,CAAhB,CAAT;AACD,GAND,CAOA,OAAOL,KAAP,EAAc;AACZ,UAAMrB,GAAG,CAACU,aAAa,CAACW,KAAD,CAAd,CAAT;AACD;AACF;AAAA;AAED,OAAO,UAAUQ,eAAV,GAA4B;AACjC,QAAM9B,UAAU,CAACQ,eAAe,CAACuB,eAAjB,EAAkCC,iBAAlC,CAAhB;AACD;AAAA;AAED,OAAO,UAAUA,iBAAV,CAA4B;AAAER,EAAAA,OAAO,EAAE;AAAEI,IAAAA,IAAF;AAAQZ,IAAAA;AAAR;AAAX,CAA5B,EAAmE;AACxE,QAAMF,uBAAuB,CAACc,IAAD,EAAOZ,cAAP,CAA7B;AACD;AAAA;AAID,OAAO,UAAUiB,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMxB,IAAI,CAAC8B,eAAL,CAAqB7B,cAArB,CAAvB;AACA,UAAMS,uBAAuB,CAACc,IAAD,CAA7B;AACD,GAHD,CAGE,OAAON,KAAP,EAAc;AACd,UAAMrB,GAAG,CAACS,aAAa,CAACY,KAAD,CAAd,CAAT;AACD;AACF;AAAA;AAED,OAAO,UAAUa,qBAAV,CAAgC;AAAEX,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAAhC,EAAmE;AACxE,MAAI;AACF,UAAM;AAAEE,MAAAA;AAAF,QAAW,MAAMxB,IAAI,CAACgC,0BAAL,CAAgCX,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMT,OAAO,GAAG,MAAMd,IAAI,CAACG,yBAAD,EAA4BsB,IAA5B,CAA1B;AACA,UAAMV,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AAEA,UAAM3B,GAAG,CACRQ,aAAa,CAAC;AAAEW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADL,CAAT;AAGD,GATD,CAUA,OAAOC,KAAP,EAAc;AACZrB,IAAAA,GAAG,CAACS,aAAa,CAACY,KAAD,CAAd,CAAH;AACD;AACF;AAAA;AAED,OAAO,UAAUiB,mBAAV,GAAgC;AACrC,MAAG;AACD,UAAMxB,QAAQ,GAAG,MAAMF,gBAAgB,EAAvC;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACD,GAHD,CAGC,OAAON,KAAP,EAAa;AACZ,UAAMrB,GAAG,CAACS,aAAa,CAACY,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUkB,mBAAV,GAAgC;AACrC,QAAMxC,UAAU,CAACQ,eAAe,CAACiC,oBAAjB,EAAuCR,gBAAvC,CAAhB;AACD;AAAA;AACD,OAAO,UAAUS,kBAAV,GAA+B;AACpC,QAAM1C,UAAU,CAACQ,eAAe,CAACmC,mBAAjB,EAAsCR,qBAAtC,CAAhB;AACD;AAAA;AACD,OAAO,UAAUS,aAAV,GAA0B;AAC/B,QAAM5C,UAAU,CAACQ,eAAe,CAACqC,aAAjB,EAAgCtB,qBAAhC,CAAhB;AACD;AAAA;AACD,OAAO,UAAUuB,kBAAV,GAA+B;AACpC,QAAM9C,UAAU,CAACQ,eAAe,CAACuC,kBAAjB,EAAqCR,mBAArC,CAAhB;AACD;AACD,OAAO,UAAUS,SAAV,GAAsB;AAC3B,QAAM9C,GAAG,CAAC,CACRC,IAAI,CAACqC,mBAAD,CADI,EAERrC,IAAI,CAACuC,kBAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser\n\n} from \"../../firebase/firebase.utils\";\n\nimport UserActionTypes from \"./user.types\";\nimport {\n  signinSuccess,\n  signinFailure,\n  signupFailure,\n  signupSuccess,\n  checkUserSession\n} from './user.actions';\n\n\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(\n      createUserProfileDocument,\n      userAuth,\n      additionalData\n    );\n    const userSnapshot = yield userRef.get();\n    yield put(signinSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n};\n\n\n\nexport function* signupWithEmailandPwd({ payload: { email, password, displayName } }) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(\n      email,\n      password\n    );\n    yield put(onSignupSuccess({ user, additionalData: { displayName } }));\n  }\n  catch (error) {\n    yield put(signupFailure(error))\n  }\n};\n\nexport function* onSignupSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signinAfterSignup);\n};\n\nexport function* signinAfterSignup({ payload: { user, additionalData } }) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n};\n\n\n\nexport function* signinWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signinFailure(error));\n  }\n};\n\nexport function* signinWithEmailandPwd({ payload: { email, password  } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    console.log(user)\n\n    yield put(\n     signinSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    )\n  }\n  catch (error) {\n    put(signinFailure(error))\n  }\n};\n\nexport function* isUserAuthenticated() {\n  try{\n    const userAuth = yield checkUserSession();\n    console.log(user)\n  }catch (error){\n    yield put(signinFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signinWithGoogle);\n}; \nexport function* onEmailSigninStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signinWithEmailandPwd)\n};\nexport function* onSignupStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signupWithEmailandPwd);\n};\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSigninStart)\n  ])\n}"]},"metadata":{},"sourceType":"module"}