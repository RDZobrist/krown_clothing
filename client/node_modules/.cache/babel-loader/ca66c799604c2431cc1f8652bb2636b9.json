{"ast":null,"code":"var _jsxFileName = \"/Users/Zobrist/Desktop/Code/krown_clothing/client/src/components/checkout-button/stripe-button.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from 'axios';\nimport { clearCart } from '../../redux/cart/cart.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StripeCheckoutButton = ({\n  price,\n  clearCart\n}) => {\n  const priceForStripe = price * 100;\n  const publishableKey = 'pk_test_51JrB82LXLc6RQBpHwh9xIxjIZEPR9vvVOlT1rcOjDXAS2gubDCmvAPsd81LoJhScB1MjcE8yxsqfbo6jX5VI8Hz300SVfgd3pf';\n\n  const onToken = token => {\n    axios({\n      url: '/payment',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token\n      }\n    }).then(res => {\n      alert('Your payment has been processed successfully.');\n      clearCart();\n    }).catch(err => {\n      console.log('Payment error: ', err);\n      alert('Your payment didn\\'t go through. Please be sure to use the provided credit cards');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(StripeCheckout, {\n    label: \"Pay Now\",\n    name: \"KRWN Clothing Ltd.\",\n    billingAddress: true,\n    shippingAddress: true,\n    image: \"https://svgshare.com/i/CUz.svg\",\n    description: `Your total is ${price}`,\n    amount: priceForStripe,\n    panelLabel: \"Pay Now\",\n    token: onToken,\n    stripeKey: publishableKey\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_c = StripeCheckoutButton;\n\nconst mapDispatchToProps = dispatch => ({\n  clearCart: () => dispatch(clearCart())\n});\n\nexport default connect(null, mapDispatchToProps)(StripeCheckoutButton);\n\nvar _c;\n\n$RefreshReg$(_c, \"StripeCheckoutButton\");","map":{"version":3,"sources":["/Users/Zobrist/Desktop/Code/krown_clothing/client/src/components/checkout-button/stripe-button.component.jsx"],"names":["React","connect","StripeCheckout","axios","clearCart","StripeCheckoutButton","price","priceForStripe","publishableKey","onToken","token","url","method","data","amount","then","res","alert","catch","err","console","log","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,+BAA1B;;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASF,EAAAA;AAAT,CAAD,KAA0B;AACrD,QAAMG,cAAc,GAAGD,KAAK,GAAG,GAA/B;AACA,QAAME,cAAc,GAAG,6GAAvB;;AAEA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AAEvBP,IAAAA,KAAK,CAAC;AACFQ,MAAAA,GAAG,EAAE,UADH;AAEFC,MAAAA,MAAM,EAAE,MAFN;AAGFC,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAEP,cADN;AAEFG,QAAAA;AAFE;AAHJ,KAAD,CAAL,CAOGK,IAPH,CAOQC,GAAG,IAAI;AACXC,MAAAA,KAAK,CAAC,+CAAD,CAAL;AACAb,MAAAA,SAAS;AAEZ,KAXD,EAWGc,KAXH,CAWSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,GAA/B;AACAF,MAAAA,KAAK,CAAC,kFAAD,CAAL;AACH,KAdD;AAeD,GAjBD;;AAmBA,sBACE,QAAC,cAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAC,oBAFP;AAGE,IAAA,cAAc,MAHhB;AAIE,IAAA,eAAe,MAJjB;AAKE,IAAA,KAAK,EAAC,gCALR;AAME,IAAA,WAAW,EAAG,iBAAgBX,KAAM,EANtC;AAOE,IAAA,MAAM,EAAEC,cAPV;AAQE,IAAA,UAAU,EAAC,SARb;AASE,IAAA,KAAK,EAAEE,OATT;AAUE,IAAA,SAAS,EAAED;AAVb;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CArCD;;KAAMH,oB;;AAuCN,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCnB,EAAAA,SAAS,EAAE,MAAMmB,QAAQ,CAACnB,SAAS,EAAV;AADa,CAAL,CAAnC;;AAKA,eAAeH,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkCjB,oBAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from 'axios';\nimport { clearCart } from '../../redux/cart/cart.actions';\n\nconst StripeCheckoutButton = ({ price, clearCart }) => {\n  const priceForStripe = price * 100;\n  const publishableKey = 'pk_test_51JrB82LXLc6RQBpHwh9xIxjIZEPR9vvVOlT1rcOjDXAS2gubDCmvAPsd81LoJhScB1MjcE8yxsqfbo6jX5VI8Hz300SVfgd3pf';\n\n  const onToken = token => {\n    \n    axios({\n        url: '/payment',\n        method: 'post', \n        data: {\n            amount: priceForStripe,\n            token\n        }\n    }).then(res => {\n        alert('Your payment has been processed successfully.')\n        clearCart();\n\n    }).catch(err => {\n        console.log('Payment error: ', err);\n        alert('Your payment didn\\'t go through. Please be sure to use the provided credit cards');\n    });\n  };\n\n  return (\n    <StripeCheckout\n      label='Pay Now'\n      name='KRWN Clothing Ltd.'\n      billingAddress\n      shippingAddress\n      image='https://svgshare.com/i/CUz.svg'\n      description={`Your total is ${price}`}\n      amount={priceForStripe}\n      panelLabel='Pay Now'\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearCart: () => dispatch(clearCart())\n\n})\n\nexport default connect(null, mapDispatchToProps)(StripeCheckoutButton);"]},"metadata":{},"sourceType":"module"}