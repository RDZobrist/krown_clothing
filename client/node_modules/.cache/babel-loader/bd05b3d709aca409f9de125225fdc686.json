{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionFailure(error.message)));\n  };\n};\nexport const fetchCollectionSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});","map":{"version":3,"sources":["/Users/Zobrist/Desktop/Code/krown_clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionStart","type","FETCH_COLLECTIONS_START","fetchCollectionStartAsync","dispatch","collectionRef","collection","get","then","snapshot","collectionsMap","fetchCollectionSuccess","catch","error","fetchCollectionFailure","message","FETCH_COLLECTIONS_SUCCESS","payload","errorMessage","FETCH_COLLECTIONS_FAILURE"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAGA,OAAO,MAAMC,oBAAoB,GAAI,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,yBAAyB,GAAG,MAAM;AAC3C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACJ,oBAAoB,EAArB,CAAR;AACAK,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMC,cAAc,GAAGX,+BAA+B,CAACU,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACO,sBAAsB,CAACD,cAAD,CAAvB,CAAR;AACH,KAHD,EAGGE,KAHH,CAGSC,KAAK,IAAIT,QAAQ,CAACU,sBAAsB,CAACD,KAAK,CAACE,OAAP,CAAvB,CAH1B;AAMH,GATD;AAUH,CAXM;AAaP,OAAO,MAAMJ,sBAAsB,GAAGD,cAAc,KAAK;AACrDT,EAAAA,IAAI,EAAEJ,eAAe,CAACmB,yBAD+B;AAErDC,EAAAA,OAAO,EAAEP;AAF4C,CAAL,CAA7C;AAKP,OAAO,MAAMI,sBAAsB,GAAGI,YAAY,KAAK;AACnDjB,EAAAA,IAAI,EAAEJ,eAAe,CAACsB,yBAD6B;AAEnDF,EAAAA,OAAO,EAAEC;AAF0C,CAAL,CAA3C","sourcesContent":["import ShopActionTypes from \"./shop.types\";\n\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\n\n\nexport const fetchCollectionStart =  () => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionStartAsync = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection('collections');\n        dispatch(fetchCollectionStart());\n        collectionRef.get().then(snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionSuccess(collectionsMap))\n        }).catch(error => dispatch(fetchCollectionFailure(error.message)))\n       \n   \n    }\n}\n\nexport const fetchCollectionSuccess = collectionsMap => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n})\n\nexport const fetchCollectionFailure = errorMessage => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n})"]},"metadata":{},"sourceType":"module"}