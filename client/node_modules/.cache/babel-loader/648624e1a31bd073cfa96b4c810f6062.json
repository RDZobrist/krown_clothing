{"ast":null,"code":"var _jsxFileName = \"/Users/Zobrist/Desktop/Code/krown_clothing/src/components/sign-in/sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { emailSigninStart, googleSigninStart } from '../../redux/user/user.actions';\nimport { SigninContainer, SigninandSignupButtonContainer } from './sign-in.styles';\nimport { SignupTitle } from '../sign-up/sign-up.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = ({\n  emailSigninStart,\n  googleSigninStart\n}) => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSigninStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SigninContainer, {\n    children: [\"      \", /*#__PURE__*/_jsxDEV(SignupTitle, {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      autocomplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        value: \"prayer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        handleChange: handleChange,\n        value: userCredentials.email,\n        label: \"email\",\n        value: e,\n        autocomplete: \"off\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: userCredentials.password,\n        handleChange: handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SigninandSignupButtonContainer, {\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \" Sign in \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSigninStart,\n          isGoogleSignIn: true,\n          children: \"Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), \"        \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SignIn, \"QgK/D0pZQM8kzXyVX5GIYtffJmU=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSigninStart: () => dispatch(googleSigninStart()),\n  emailSigninStart: (email, password) => dispatch(emailSigninStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/Zobrist/Desktop/Code/krown_clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","emailSigninStart","googleSigninStart","SigninContainer","SigninandSignupButtonContainer","SignupTitle","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","e","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { emailSigninStart, googleSigninStart } from '../../redux/user/user.actions';\nimport { SigninContainer, SigninandSignupButtonContainer } from './sign-in.styles';\n\nimport { SignupTitle } from '../sign-up/sign-up.styles'\n\nconst SignIn = ({ emailSigninStart, googleSigninStart }) => {\n  const [userCredentials, setCredentials] = useState({ email: '', password: ''});\n  const { email, password } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    emailSigninStart(email, password);\n\n\n  };\n\n  const handleChange = event => {\n    const { value, name } = event.target;\n\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n\n    return (\n      <SigninContainer>      <SignupTitle>I already have an account</SignupTitle>\n        <span>Sign in with your email and password</span>\n\n        <form onSubmit={handleSubmit} autocomplete=\"off\">\n        <input type='hidden' value='prayer' />\n          <FormInput\n            name='email'\n            type='email'\n            handleChange={handleChange}\n            value={userCredentials.email}\n            label='email'\n            value={e}\n            autocomplete=\"off\"\n            required\n          />\n          <FormInput\n            name='password'\n            type='password'\n            value={userCredentials.password}\n            handleChange={handleChange}\n            label='password'\n            required\n          />\n          <SigninandSignupButtonContainer>\n          <CustomButton type='submit'> Sign in </CustomButton>\n            <CustomButton\n              type='button'\n              onClick={googleSigninStart}\n              isGoogleSignIn\n            >\n              Google\n            </CustomButton>\n            {/* <CustomButton onClick={signInWithFacebook} isFacebookSignIn>\n              Facebook\n            </CustomButton> */}\n          </SigninandSignupButtonContainer>        </form>\n      </SigninContainer>\n    );\n  \n}\nconst mapDispatchToProps = dispatch => ({\n  googleSigninStart: () => dispatch(googleSigninStart()),\n  emailSigninStart: (email, password) =>\n    dispatch(emailSigninStart({ email, password }))\n});\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}