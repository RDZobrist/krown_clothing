{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionStartAsync);\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        isLoading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/Zobrist/Desktop/Code/krown_clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionStartAsync","dispatch","collectionRef","collection","unsubscribeFromSnapshot","onSnapshot","snapshot","collectionsMap","updateCollections","setState","isLoading"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAGA,OAAO,MAAMC,qBAAqB,GAAI,OAAO;AACzCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADmB,CAAP,CAA/B;AAIP,OAAO,MAAMC,yBAAyB,GAAG,MAAM;AAC3C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACD,yBAAD,CAAR;AACA,SAAKI,uBAAL,GAA8BF,aAAa,CAACG,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzE,YAAMC,cAAc,GAAGX,+BAA+B,CAACU,QAAD,CAAtD;AACAE,MAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACA,WAAKE,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACH,KAJiC,CAA9B;AAKH,GARD;AASH,CAVM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\n\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\n\n\nexport const fetchCollectionsStart =  () => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionStartAsync = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection('collections');\n        dispatch(fetchCollectionStartAsync)\n        this.unsubscribeFromSnapshot= collectionRef.onSnapshot(async snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        updateCollections(collectionsMap);\n        this.setState({ isLoading: false})\n    });\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}