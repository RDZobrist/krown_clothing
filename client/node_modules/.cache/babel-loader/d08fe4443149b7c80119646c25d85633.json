{"ast":null,"code":"var _jsxFileName = \"/Users/Zobrist/Desktop/Code/krown_clothing/client/src/pages/admin-dashboard/admin-dashboard.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { AdminDashboardPageWrapper } from \"./admin-dashboard.styles\";\nimport './admin-dashboard.styles';\nimport { CustomButtonContainer } from \"../../components/custom-button/custom-button.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminDashboard = ({\n  checkAdminCredentials\n}) => {\n  _s();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSigninStart(email, password);\n  };\n\n  const [adminCredentials, setAdminCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = adminCredentials;\n  cons[(passwordAdmin, setPasswordAdmin)] = useState('');\n\n  /*#__PURE__*/\n  _jsxDEV(AdminDashboardPageWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"admin-login-form\",\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        autoComplete: false,\n        value: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        children: \" sign in \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AdminDashboard, \"7XwbhsGitA9xW90KK/H1jONGHvU=\");\n\n_c = AdminDashboard;\n\nconst mapDispatchToProps = dispatch => {\n  checkAdminCredentials: (email, password) => dispatch(checkAdminCredentials(email, password));\n};\n\nexport default connect(null, mapDispatchToProps)(AdminDashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"sources":["/Users/Zobrist/Desktop/Code/krown_clothing/client/src/pages/admin-dashboard/admin-dashboard.component.jsx"],"names":["React","useState","connect","CustomButton","FormInput","AdminDashboardPageWrapper","CustomButtonContainer","AdminDashboard","checkAdminCredentials","handleSubmit","event","preventDefault","emailSigninStart","email","password","adminCredentials","setAdminCredentials","cons","passwordAdmin","setPasswordAdmin","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,SAASC,yBAAT,QAA0C,0BAA1C;AACA,OAAO,0BAAP;AACA,SAASC,qBAAT,QAAsC,qDAAtC;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA+B;AAAA;;AAC9C,QAAMC,YAAY,GAAG,MAAMC,KAAN,IAAe;AACpCA,IAAAA,KAAK,CAACC,cAAN;AAEAC,IAAAA,gBAAgB,CAACC,KAAD,EAAQC,QAAR,CAAhB;AAGD,GANC;;AAOJ,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0Cf,QAAQ,CAAC;AAAEY,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAAxD;AACA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBC,gBAA5B;AAEEE,EAAAA,IAAI,EAAEC,aAAa,EAAEC,gBAAjB,EAAJ,GAAyClB,QAAQ,CAAC,EAAD,CAAjD;;AACF;AAAA,UAAC,yBAAD;AAAA,2BACI;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAC,UAAhB;AAA2B,QAAA,YAAY,EAAE,KAAzC;AAAgD,QAAA,KAAK;AAArD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAOH,CAnBD;;GAAMM,c;;KAAAA,c;;AAoBN,MAAMa,kBAAkB,GAAGC,QAAQ,IAAI;AACnCb,EAAAA,qBAAqB,EAAE,CAACK,KAAD,EAAQC,QAAR,KAAqBO,QAAQ,CAACb,qBAAqB,CAACK,KAAD,EAAQC,QAAR,CAAtB,CAA7B;AAC1B,CAFD;;AAGA,eAAeZ,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCb,cAAlC,CAAf","sourcesContent":["import React, { useState} from \"react\";\nimport { connect } from 'react-redux';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { AdminDashboardPageWrapper } from \"./admin-dashboard.styles\";\nimport './admin-dashboard.styles';\nimport { CustomButtonContainer } from \"../../components/custom-button/custom-button.styles\";\n\nconst AdminDashboard = ({ checkAdminCredentials }) => {\n        const handleSubmit = async event => {\n        event.preventDefault();\n    \n        emailSigninStart(email, password);\n    \n    \n      };\n    const [adminCredentials, setAdminCredentials] = useState({ email: '', password: ''});\n    const { email, password } = adminCredentials;\n\n      cons [passwordAdmin, setPasswordAdmin] = useState('');\n    <AdminDashboardPageWrapper >\n        <form className='admin-login-form'>\n          <FormInput label='email'/>\n          <FormInput type='password' autoComplete={false} value/>\n          <CustomButton > sign in </CustomButton>\n        </form>\n    </AdminDashboardPageWrapper>\n};\nconst mapDispatchToProps = dispatch => {\n    checkAdminCredentials: (email, password) => dispatch(checkAdminCredentials(email, password))\n}\nexport default connect(null, mapDispatchToProps)(AdminDashboard);"]},"metadata":{},"sourceType":"module"}