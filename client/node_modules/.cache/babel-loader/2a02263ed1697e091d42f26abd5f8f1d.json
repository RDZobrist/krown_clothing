{"ast":null,"code":"var _jsxFileName = \"/Users/Zobrist/Desktop/Code/krown_clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionPage from '../collection/collection.component';\nimport { fetchCollectionStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionsPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionStartAsync\n    } = this.props;\n    fetchCollectionStartAsync();\n  }\n\n  render() {\n    const {\n      isCollectionFetching,\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 66\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsPageWithSpinner, {\n          isLoading: isCollectionFetching,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 80\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollections\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionStartAsync: () => dispatch(fetchCollectionStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionsPageWithSpinner\");","map":{"version":3,"sources":["/Users/Zobrist/Desktop/Code/krown_clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","CollectionsOverview","WithSpinner","CollectionPage","fetchCollectionStartAsync","selectIsCollectionFetching","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","ShopPage","Component","componentDidMount","props","render","isCollectionFetching","match","path","mapStateToProps","isCollections","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAGA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,yBAAT,QAA0C,+BAA1C;AACA,SAASC,0BAAT,QAA2C,iCAA3C;;AACA,MAAMC,8BAA8B,GAAGJ,WAAW,CAACD,mBAAD,CAAlD;KAAMK,8B;AACN,MAAMC,0BAA0B,GAAGL,WAAW,CAACC,cAAD,CAA9C;MAAMI,0B;;AAGN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAGnCC,EAAAA,iBAAiB,GAAE;AAClB,UAAM;AAAEN,MAAAA;AAAF,QAAgC,KAAKO,KAA3C;AACAP,IAAAA,yBAAyB;AAC5B;;AAEGQ,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA,oBAAF;AAAwBC,MAAAA;AAAxB,QAAkC,KAAKH,KAA7C;AACA,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAGJ,KAAD,iBAAW,QAAC,8BAAD;AAAgC,UAAA,SAAS,EAAEE,oBAA3C;AAAA,aAAqEF;AAArE;AAAA;AAAA;AAAA;AAAA;AAAvD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,gBAAjC;AAAkD,QAAA,MAAM,EAAGJ,KAAD,iBAAW,QAAC,0BAAD;AAA4B,UAAA,SAAS,EAAEE,oBAAvC;AAAA,aAAiEF;AAAjE;AAAA;AAAA;AAAA;AAAA;AAArE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAMH;;AAhBiC;;AAkBtC,MAAMK,eAAe,GAAGhB,wBAAwB,CAAC;AAC7Ca,EAAAA,oBAAoB,EAAER,0BADuB;AAE7CY,EAAAA;AAF6C,CAAD,CAAhD;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCf,EAAAA,yBAAyB,EAAE,MAAMe,QAAQ,CAACf,yBAAyB,EAA1B;AADH,CAAL,CAAnC;;AAGA,eAAeL,OAAO,CAACiB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CV,QAA5C,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionPage from '../collection/collection.component';\nimport { fetchCollectionStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage)\n\n\nclass ShopPage extends React.Component{\n\n   \n   componentDidMount(){\n    const { fetchCollectionStartAsync } = this.props;\n    fetchCollectionStartAsync();\n}\n   \n    render(){\n        const { isCollectionFetching, match } = this.props;\n        return(\n        <div className='shop-page'>\n          <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props}/>} />\n          <Route exact path={`${match.path}/:collectionId`} render={(props) => <CollectionsPageWithSpinner isLoading={isCollectionFetching} {...props}/>} />\n        </div>\n        )\n    }\n}\nconst mapStateToProps = createStructuredSelector({\n    isCollectionFetching: selectIsCollectionFetching,\n    isCollections\n})\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionStartAsync: () => dispatch(fetchCollectionStartAsync())\n})\nexport default connect(mapStateToProps,mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}