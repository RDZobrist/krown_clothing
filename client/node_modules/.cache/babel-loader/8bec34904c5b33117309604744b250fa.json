{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport UserActionTypes from \"./user.types\";\nimport { googleSigninSuccess, googleSigninFailure, emailSigninSuccess, emailSigninFailure, signupFailure } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSigninSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSigninFailure(error));\n  }\n}\n;\nexport function* signupWithEmailandPwd({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(onSignupSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signupFailure(error));\n  }\n}\n;\nexport function* onSignupSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signinAfterSignup);\n}\n;\nexport function* signinAfterSignup({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\n;\nexport function* signinWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(googleSigninFailure(error));\n  }\n}\n;\nexport function* signinWithEmailandPwd({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    console.log(user);\n    yield put(emailSigninSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    put(emailSigninFailure(error));\n  }\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signinWithGoogle);\n}\n;\nexport function* onEmailSigninStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signinWithEmailandPwd);\n}\n;\nexport function* onSignupStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signupWithEmailandPwd);\n}\n;\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSigninStart)]);\n}","map":{"version":3,"sources":["/Users/Zobrist/Desktop/Code/krown_clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","UserActionTypes","googleSigninSuccess","googleSigninFailure","emailSigninSuccess","emailSigninFailure","signupFailure","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signupWithEmailandPwd","payload","email","password","displayName","user","createUserWithEmailAndPassword","onSignupSuccess","SIGN_UP_SUCCESS","signinAfterSignup","signinWithGoogle","signInWithPopup","signinWithEmailandPwd","signInWithEmailAndPassword","console","log","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSigninStart","EMAIL_SIGN_IN_START","onSignupStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n \n} from \"../../firebase/firebase.utils\";\nimport UserActionTypes from \"./user.types\";\nimport {\n  googleSigninSuccess,\n  googleSigninFailure,\n  emailSigninSuccess,\n  emailSigninFailure,\n  signupFailure\n} from './user.actions';\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(\n      createUserProfileDocument,\n      userAuth,\n      additionalData\n    );\n    const userSnapshot = yield userRef.get();\n    yield put(googleSigninSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n  } catch (error) {\n    yield put(googleSigninFailure(error));\n  }\n};\n\n\n\nexport function* signupWithEmailandPwd({payload: { email, password, displayName}}){\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(\n      email,\n      password\n    );\n    yield put(onSignupSuccess({ user, additionalData: { displayName } }));\n    }\n   catch (error) {\n    yield put(signupFailure(error))\n  }\n};\n\nexport function* onSignupSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signinAfterSignup);\n};\n\nexport function* signinAfterSignup({ payload: { user, additionalData } }) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n};\n\n\n\nexport function* signinWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(googleSigninFailure(error));\n  }\n};\n\nexport function* signinWithEmailandPwd({payload: { email, password}}) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    console.log(user)\n    yield put(\n      emailSigninSuccess({ id: userSnapshot.id, ...userSnapshot.data()})\n    )\n\n  }catch(error){\n    put(emailSigninFailure(error))\n  }\n};\n\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signinWithGoogle);\n};\nexport function* onEmailSigninStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signinWithEmailandPwd)\n};\nexport function* onSignupStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signupWithEmailandPwd);\n};\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSigninStart)\n  ])\n}"]},"metadata":{},"sourceType":"module"}