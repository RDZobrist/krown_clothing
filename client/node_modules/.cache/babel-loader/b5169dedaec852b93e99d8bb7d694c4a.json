{"ast":null,"code":"import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionSuccess, fetchCollectionFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/Zobrist/Desktop/Code/krown_clothing/src/redux/shop/shop.sagas.js"],"names":["all","takeLatest","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionSuccess","fetchCollectionFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SACIC,sBADJ,EAEIC,sBAFJ,QAGO,gBAHP;AAIA,OAAOC,eAAP,MAA4B,cAA5B;AAGA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,MAAG;AACH,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAACG,+BAAD,EAAkCO,QAAlC,CAAjC;AACA,UAAMT,GAAG,CAACG,sBAAsB,CAACQ,cAAD,CAAvB,CAAT;AACA,GALA,CAKA,OAAOC,KAAP,EAAa;AACb,UAAMZ,GAAG,CAACI,sBAAsB,CAACQ,KAAK,CAACC,OAAP,CAAvB,CAAT;AACC;AAIJ;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMhB,UAAU,CACZO,eAAe,CAACU,uBADJ,EAEZT,qBAFY,CAAhB;AAIH;AAED,OAAO,UAAUU,SAAV,GAAsB;AACzB,QAAMnB,GAAG,CAAC,CAACE,IAAI,CAACe,qBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import { all, takeLatest, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport {\n    fetchCollectionSuccess,\n    fetchCollectionFailure\n} from './shop.actions';\nimport ShopActionTypes from './shop.types';\n\n\nexport function* fetchCollectionsAsync() {\n    try{\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();    \n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionsMap));\n   }catch (error){\n    yield put(fetchCollectionFailure(error.message));\n    }\n \n       \n       \n}\n\nexport function* fetchCollectionsStart() {\n    yield takeLatest(\n        ShopActionTypes.FETCH_COLLECTIONS_START, \n        fetchCollectionsAsync\n    );\n}\n\nexport function* shopSagas() {\n    yield all([call(fetchCollectionsStart)])\n}"]},"metadata":{},"sourceType":"module"}